State 84 conflicts: 1 shift/reduce
State 141 conflicts: 1 shift/reduce
State 226 conflicts: 1 shift/reduce
State 310 conflicts: 1 shift/reduce
State 330 conflicts: 2 reduce/reduce
State 350 conflicts: 1 shift/reduce
State 406 conflicts: 1 shift/reduce
State 509 conflicts: 2 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: block_definition_list

    2 block_definition_list: block_definition
    3                      | block_definition_list block_definition

    4 alternation: ALT NEWLINE RIND alternative_vlist ROUTD
    5            | ALT NEWLINE
    6            | ALT replicator NEWLINE RIND alternative ROUTD
    7            | PRI ALT NEWLINE RIND alternative_vlist ROUTD
    8            | PRI ALT NEWLINE
    9            | PRI ALT replicator NEWLINE RIND alternative ROUTD

   10 alternative: guarded_alternative
   11            | alternation
   12            | specification alternative
   13            | channel '?' CASE NEWLINE RIND variant_vlist ROUTD
   14            | channel '?' CASE NEWLINE
   15            | boolean '&' channel '?' CASE NEWLINE RIND variant_vlist ROUTD
   16            | boolean '&' channel '?' CASE NEWLINE

   17 alternative_vlist: alternative
   18                  | alternative_vlist alternative

   19 block_definition: PROC name '(' formal_olist ')' NEWLINE RIND procedure_body ROUTD ':' NEWLINE
   20                 | data_type_clist FUNCTION name '(' formal_olist ')' NEWLINE RIND function_body ROUTD ':' NEWLINE

   21 case_input: channel '?' CASE NEWLINE RIND variant_vlist ROUTD
   22           | channel '?' CASE NEWLINE

   23 choice: guarded_choice
   24       | conditional
   25       | specification choice

   26 choice_vlist: choice
   27             | choice_vlist choice

   28 conditional: IF NEWLINE RIND choice_vlist ROUTD
   29            | IF NEWLINE
   30            | IF replicator NEWLINE RIND choice ROUTD

   31 construction: sequence
   32             | conditional
   33             | selection
   34             | loop
   35             | parallel
   36             | alternation

   37 definition: PROTOCOL name IS sequential_protocol ':' NEWLINE
   38           | PROTOCOL name NEWLINE RIND CASE NEWLINE RIND tagged_protocol_vlist ROUTD ROUTD ':' NEWLINE
   39           | PROTOCOL name NEWLINE RIND CASE NEWLINE ROUTD ':' NEWLINE
   40           | ANY FUNCTION name '(' ')' NEWLINE RIND function_body ROUTD ':' NEWLINE
   41           | data_type_clist FUNCTION name '(' formal_olist ')' IS expression_list ':' NEWLINE
   42           | specifier name RETYPES element ':' NEWLINE
   43           | VAL specifier name RETYPES expression ':' NEWLINE
   44           | block_definition

   45 function_body: value_process

   46 guarded_alternative: guard RIND process ROUTD

   47 guarded_choice: boolean NEWLINE RIND process ROUTD

   48 loop: WHILE boolean NEWLINE RIND process ROUTD

   49 option: case_expression_clist NEWLINE RIND process ROUTD
   50       | ELSE NEWLINE RIND process ROUTD
   51       | specification option

   52 option_vlist: option
   53             | option_vlist option

   54 parallel: PAR NEWLINE RIND process_vlist ROUTD
   55         | PAR NEWLINE
   56         | PAR replicator NEWLINE RIND process ROUTD
   57         | PRI PAR NEWLINE RIND process_vlist ROUTD
   58         | PRI PAR NEWLINE
   59         | PRI PAR replicator NEWLINE RIND process ROUTD
   60         | placedpar

   61 placedpar: PLACED PAR NEWLINE RIND placedpar_vlist ROUTD
   62          | PLACED PAR NEWLINE
   63          | PLACED PAR replicator NEWLINE RIND placedpar ROUTD
   64          | PROCESSOR expression NEWLINE RIND process ROUTD

   65 placedpar_vlist: placedpar
   66                | placedpar_vlist placedpar

   67 procedure_body: process

   68 process: SKIP NEWLINE
   69        | STOP NEWLINE
   70        | action
   71        | construction
   72        | instance
   73        | case_input
   74        | specification process
   75        | allocation process

   76 process_vlist: process
   77              | process_vlist process

   78 selection: CASE selector NEWLINE RIND option_vlist ROUTD
   79          | CASE selector NEWLINE

   80 sequence: SEQ NEWLINE RIND process_vlist ROUTD
   81         | SEQ NEWLINE
   82         | SEQ replicator NEWLINE RIND process ROUTD

   83 specification: declaration
   84              | abbreviation
   85              | definition

   86 valof: VALOF NEWLINE RIND process RESULT expression_list NEWLINE ROUTD
   87      | specification valof

   88 value_process: valof

   89 variant: tagged_list NEWLINE RIND process ROUTD
   90        | specification variant

   91 variant_vlist: variant
   92              | variant_vlist variant

   93 abbreviation: specifier name IS element ':' NEWLINE
   94             | name IS element ':' NEWLINE
   95             | VAL specifier name IS expression ':' NEWLINE
   96             | VAL name IS expression ':' NEWLINE

   97 action: assignment NEWLINE
   98       | input NEWLINE
   99       | output NEWLINE

  100 allocation: PLACE name AT expression ':' NEWLINE

  101 declaration: type name_clist ':' NEWLINE

  102 guard: input NEWLINE
  103      | boolean '&' input NEWLINE
  104      | boolean '&' SKIP NEWLINE

  105 instance: name '(' actual_olist ')' NEWLINE

  106 tagged_protocol: scalar NEWLINE
  107                | scalar ';' sequential_protocol NEWLINE

  108 tagged_protocol_vlist: tagged_protocol
  109                      | tagged_protocol_vlist tagged_protocol

  110 actual: element
  111       | expression

  112 actual_clist: actual
  113             | actual_clist ',' actual

  114 actual_olist: /* empty */
  115             | actual_clist

  116 assignment: variable_clist ASSIGN expression_list

  117 base: expression

  118 boolean: expression

  119 case_expression: expression

  120 case_expression_clist: case_expression
  121                      | case_expression_clist ',' case_expression

  122 channel: element

  123 delayed_input: channel '?' AFTER expression

  124 expression_list: name '(' expression_olist ')'
  125                | expression_clist

  126 formal: specifier name_clist
  127       | VAL specifier name_clist

  128 formal_clist: formal
  129             | formal_clist ',' formal

  130 formal_olist: /* empty */
  131             | formal_clist

  132 indef_type: INDEF_SPEC type
  133           | INDEF_SPEC indef_type
  134           | '[' expression ']' indef_type

  135 input: channel '?' input_item_slist
  136      | channel '?' CASE tagged_list
  137      | delayed_input

  138 input_item: variable
  139           | variable DOUBLE_COLON variable

  140 input_item_slist: input_item
  141                 | input_item_slist ';' input_item

  142 output: channel '!' output_item_slist
  143       | channel '!' scalar ';' output_item_slist

  144 output_item: expression
  145            | expression DOUBLE_COLON expression

  146 output_item_slist: output_item
  147                  | output_item_slist ';' output_item

  148 replicator: name '=' base FOR count

  149 selector: expression

  150 sequential_protocol: simple_protocol_slist

  151 simple_protocol_slist: simple_protocol
  152                      | simple_protocol_slist ';' simple_protocol

  153 specifier: type
  154          | indef_type

  155 tagged_list: scalar
  156            | scalar ';' input_item_slist

  157 variable: element

  158 variable_clist: variable
  159               | variable_clist ',' variable

  160 andor_expression: andor_expression andor_operator operand
  161                 | operand andor_operator operand

  162 array_type: '[' expression ']' type

  163 comms_type: CHAN OF protocol
  164           | TIMER
  165           | PORT OF type

  166 conversion: primitive_type operand
  167           | primitive_type ROUND operand
  168           | primitive_type TRUNC operand

  169 count: expression

  170 element: element '[' subscript ']'
  171        | '[' element FROM subscript FOR subscript ']'
  172        | scalar

  173 expression: monadic_operator operand
  174           | operand dyadic_operator operand
  175           | andor_expression
  176           | conversion
  177           | operand
  178           | MOSTPOS data_type
  179           | MOSTNEG data_type

  180 expression_clist: expression
  181                 | expression_clist ',' expression

  182 expression_olist: /* empty */
  183                 | expression_clist

  184 operand: element
  185        | literal
  186        | table
  187        | '(' expression ')'
  188        | name '(' expression_olist ')'

  189 primitive_type: comms_type
  190               | data_type

  191 protocol: name
  192         | simple_protocol
  193         | ANY

  194 simple_protocol: type
  195                | counting_type DOUBLE_COLON INDEF_SPEC type

  196 subscript: expression

  197 table: table '[' subscript ']'
  198      | '[' expression_clist ']'
  199      | '[' table FROM subscript FOR count ']'

  200 type: primitive_type
  201     | array_type

  202 andor_operator: AND
  203               | OR

  204 byte: BYTE_CONSTANT

  205 counting_type: BYTE
  206              | INT
  207              | INT16
  208              | INT32
  209              | INT64

  210 data_type: counting_type
  211          | BOOL
  212          | REAL32
  213          | REAL64

  214 data_type_clist: data_type
  215                | data_type_clist ',' data_type

  216 dyadic_operator: AFTER
  217                | BITAND
  218                | BITOR
  219                | MINUS
  220                | PLUS
  221                | REM
  222                | TIMES
  223                | RIGHT_OP
  224                | LEFT_OP
  225                | AND_OP
  226                | OR_OP
  227                | LE_OP
  228                | GE_OP
  229                | XOR_OP
  230                | NE_OP
  231                | '-'
  232                | '+'
  233                | '*'
  234                | '/'
  235                | '\\'
  236                | '<'
  237                | '>'

  238 integer: INT_CONSTANT
  239        | HEX_CONSTANT

  240 literal: integer
  241        | byte
  242        | integer '(' data_type ')'
  243        | byte '(' data_type ')'
  244        | real '(' data_type ')'
  245        | string
  246        | TRUE
  247        | FALSE

  248 monadic_operator: BITNOT
  249                 | MINUS
  250                 | NOT
  251                 | SIZE
  252                 | '~'
  253                 | '-'

  254 name: IDENTIFIER

  255 name_clist: name
  256           | name_clist ',' name

  257 real: REAL_CONSTANT

  258 scalar: name

  259 string: STRING_LITERAL
  260       | string_head STRING_LITERAL_END

  261 string_head: STRING_LITERAL_START
  262            | string_head STRING_LITERAL_MIDDLE


Terminals, with rules where they appear

$end (0) 0
'!' (33) 142 143
'&' (38) 15 16 103 104
'(' (40) 19 20 40 41 105 124 187 188 242 243 244
')' (41) 19 20 40 41 105 124 187 188 242 243 244
'*' (42) 233
'+' (43) 232
',' (44) 113 121 129 159 181 215 256
'-' (45) 231 253
'/' (47) 234
':' (58) 19 20 37 38 39 40 41 42 43 93 94 95 96 100 101
';' (59) 107 141 143 147 152 156
'<' (60) 236
'=' (61) 148
'>' (62) 237
'?' (63) 13 14 15 16 21 22 123 135 136
'[' (91) 134 162 170 171 197 198 199
'\\' (92) 235
']' (93) 134 162 170 171 197 198 199
'~' (126) 252
error (256)
AFTER (258) 123 216
ALT (259) 4 5 6 7 8 9
AND (260) 202
AND_OP (261) 225
ANY (262) 40 193
ASSIGN (263) 116
AT (264) 100
BITAND (265) 217
BITNOT (266) 248
BITOR (267) 218
BOOL (268) 211
BYTE (269) 205
BYTE_CONSTANT (270) 204
CASE (271) 13 14 15 16 21 22 38 39 78 79 136
CHAN (272) 163
DOUBLE_COLON (273) 139 145 195
ELSE (274) 50
FALSE (275) 247
FOR (276) 148 171 199
FROM (277) 171 199
FUNCTION (278) 20 40 41
GE_OP (279) 228
HEX_CONSTANT (280) 239
IDENTIFIER (281) 254
IF (282) 28 29 30
INDEF_SPEC (283) 132 133 195
INT (284) 206
INT16 (285) 207
INT32 (286) 208
INT64 (287) 209
INT_CONSTANT (288) 238
IS (289) 37 41 93 94 95 96
LEFT_OP (290) 224
LE_OP (291) 227
MINUS (292) 219 249
MOSTNEG (293) 179
MOSTPOS (294) 178
NEWLINE (295) 4 5 6 7 8 9 13 14 15 16 19 20 21 22 28 29 30 37 38 39
    40 41 42 43 47 48 49 50 54 55 56 57 58 59 61 62 63 64 68 69 78
    79 80 81 82 86 89 93 94 95 96 97 98 99 100 101 102 103 104 105
    106 107
NE_OP (296) 230
NOT (297) 250
OF (298) 163 165
OR (299) 203
OR_OP (300) 226
PAR (301) 54 55 56 57 58 59 61 62 63
PLACE (302) 100
PLACED (303) 61 62 63
PLUS (304) 220
PORT (305) 165
PRI (306) 7 8 9 57 58 59
PROC (307) 19
PROCESSOR (308) 64
PROTOCOL (309) 37 38 39
REAL32 (310) 212
REAL64 (311) 213
REAL_CONSTANT (312) 257
REM (313) 221
RESULT (314) 86
RETYPES (315) 42 43
RIGHT_OP (316) 223
RIND (317) 4 6 7 9 13 15 19 20 21 28 30 38 39 40 46 47 48 49 50 54
    56 57 59 61 63 64 78 80 82 86 89
ROUND (318) 167
ROUTD (319) 4 6 7 9 13 15 19 20 21 28 30 38 39 40 46 47 48 49 50 54
    56 57 59 61 63 64 78 80 82 86 89
SEQ (320) 80 81 82
SIZE (321) 251
SKIP (322) 68 104
STOP (323) 69
STRING_LITERAL (324) 259
STRING_LITERAL_END (325) 260
STRING_LITERAL_MIDDLE (326) 262
STRING_LITERAL_START (327) 261
TIMER (328) 164
TIMES (329) 222
TRUE (330) 246
TRUNC (331) 168
VAL (332) 43 95 96 127
VALOF (333) 86
WHILE (334) 48
XOR_OP (335) 229


Nonterminals, with rules where they appear

$accept (100)
    on left: 0
program (101)
    on left: 1, on right: 0
block_definition_list (102)
    on left: 2 3, on right: 1 3
alternation (103)
    on left: 4 5 6 7 8 9, on right: 11 36
alternative (104)
    on left: 10 11 12 13 14 15 16, on right: 6 9 12 17 18
alternative_vlist (105)
    on left: 17 18, on right: 4 7 18
block_definition (106)
    on left: 19 20, on right: 2 3 44
case_input (107)
    on left: 21 22, on right: 73
choice (108)
    on left: 23 24 25, on right: 25 26 27 30
choice_vlist (109)
    on left: 26 27, on right: 27 28
conditional (110)
    on left: 28 29 30, on right: 24 32
construction (111)
    on left: 31 32 33 34 35 36, on right: 71
definition (112)
    on left: 37 38 39 40 41 42 43 44, on right: 85
function_body (113)
    on left: 45, on right: 20 40
guarded_alternative (114)
    on left: 46, on right: 10
guarded_choice (115)
    on left: 47, on right: 23
loop (116)
    on left: 48, on right: 34
option (117)
    on left: 49 50 51, on right: 51 52 53
option_vlist (118)
    on left: 52 53, on right: 53 78
parallel (119)
    on left: 54 55 56 57 58 59 60, on right: 35
placedpar (120)
    on left: 61 62 63 64, on right: 60 63 65 66
placedpar_vlist (121)
    on left: 65 66, on right: 61 66
procedure_body (122)
    on left: 67, on right: 19
process (123)
    on left: 68 69 70 71 72 73 74 75, on right: 46 47 48 49 50 56 59
    64 67 74 75 76 77 82 86 89
process_vlist (124)
    on left: 76 77, on right: 54 57 77 80
selection (125)
    on left: 78 79, on right: 33
sequence (126)
    on left: 80 81 82, on right: 31
specification (127)
    on left: 83 84 85, on right: 12 25 51 74 87 90
valof (128)
    on left: 86 87, on right: 87 88
value_process (129)
    on left: 88, on right: 45
variant (130)
    on left: 89 90, on right: 90 91 92
variant_vlist (131)
    on left: 91 92, on right: 13 15 21 92
abbreviation (132)
    on left: 93 94 95 96, on right: 84
action (133)
    on left: 97 98 99, on right: 70
allocation (134)
    on left: 100, on right: 75
declaration (135)
    on left: 101, on right: 83
guard (136)
    on left: 102 103 104, on right: 46
instance (137)
    on left: 105, on right: 72
tagged_protocol (138)
    on left: 106 107, on right: 108 109
tagged_protocol_vlist (139)
    on left: 108 109, on right: 38 109
actual (140)
    on left: 110 111, on right: 112 113
actual_clist (141)
    on left: 112 113, on right: 113 115
actual_olist (142)
    on left: 114 115, on right: 105
assignment (143)
    on left: 116, on right: 97
base (144)
    on left: 117, on right: 148
boolean (145)
    on left: 118, on right: 15 16 47 48 103 104
case_expression (146)
    on left: 119, on right: 120 121
case_expression_clist (147)
    on left: 120 121, on right: 49 121
channel (148)
    on left: 122, on right: 13 14 15 16 21 22 123 135 136 142 143
delayed_input (149)
    on left: 123, on right: 137
expression_list (150)
    on left: 124 125, on right: 41 86 116
formal (151)
    on left: 126 127, on right: 128 129
formal_clist (152)
    on left: 128 129, on right: 129 131
formal_olist (153)
    on left: 130 131, on right: 19 20 41
indef_type (154)
    on left: 132 133 134, on right: 133 134 154
input (155)
    on left: 135 136 137, on right: 98 102 103
input_item (156)
    on left: 138 139, on right: 140 141
input_item_slist (157)
    on left: 140 141, on right: 135 141 156
output (158)
    on left: 142 143, on right: 99
output_item (159)
    on left: 144 145, on right: 146 147
output_item_slist (160)
    on left: 146 147, on right: 142 143 147
replicator (161)
    on left: 148, on right: 6 9 30 56 59 63 82
selector (162)
    on left: 149, on right: 78 79
sequential_protocol (163)
    on left: 150, on right: 37 107
simple_protocol_slist (164)
    on left: 151 152, on right: 150 152
specifier (165)
    on left: 153 154, on right: 42 43 93 95 126 127
tagged_list (166)
    on left: 155 156, on right: 89 136
variable (167)
    on left: 157, on right: 138 139 158 159
variable_clist (168)
    on left: 158 159, on right: 116 159
andor_expression (169)
    on left: 160 161, on right: 160 175
array_type (170)
    on left: 162, on right: 201
comms_type (171)
    on left: 163 164 165, on right: 189
conversion (172)
    on left: 166 167 168, on right: 176
count (173)
    on left: 169, on right: 148 199
element (174)
    on left: 170 171 172, on right: 42 93 94 110 122 157 170 171 184
expression (175)
    on left: 173 174 175 176 177 178 179, on right: 43 64 95 96 100
    111 117 118 119 123 134 144 145 149 162 169 180 181 187 196
expression_clist (176)
    on left: 180 181, on right: 125 181 183 198
expression_olist (177)
    on left: 182 183, on right: 124 188
operand (178)
    on left: 184 185 186 187 188, on right: 160 161 166 167 168 173
    174 177
primitive_type (179)
    on left: 189 190, on right: 166 167 168 200
protocol (180)
    on left: 191 192 193, on right: 163
simple_protocol (181)
    on left: 194 195, on right: 151 152 192
subscript (182)
    on left: 196, on right: 170 171 197 199
table (183)
    on left: 197 198 199, on right: 186 197 199
type (184)
    on left: 200 201, on right: 101 132 153 162 165 194 195
andor_operator (185)
    on left: 202 203, on right: 160 161
byte (186)
    on left: 204, on right: 241 243
counting_type (187)
    on left: 205 206 207 208 209, on right: 195 210
data_type (188)
    on left: 210 211 212 213, on right: 178 179 190 214 215 242 243
    244
data_type_clist (189)
    on left: 214 215, on right: 20 41 215
dyadic_operator (190)
    on left: 216 217 218 219 220 221 222 223 224 225 226 227 228 229
    230 231 232 233 234 235 236 237, on right: 174
integer (191)
    on left: 238 239, on right: 240 242
literal (192)
    on left: 240 241 242 243 244 245 246 247, on right: 185
monadic_operator (193)
    on left: 248 249 250 251 252 253, on right: 173
name (194)
    on left: 254, on right: 19 20 37 38 39 40 41 42 43 93 94 95 96
    100 105 124 148 188 191 255 256 258
name_clist (195)
    on left: 255 256, on right: 101 126 127 256
real (196)
    on left: 257, on right: 244
scalar (197)
    on left: 258, on right: 106 107 143 155 156 172
string (198)
    on left: 259 260, on right: 245
string_head (199)
    on left: 261 262, on right: 260 262


state 0

    0 $accept: . program $end

    BOOL    shift, and go to state 1
    BYTE    shift, and go to state 2
    INT     shift, and go to state 3
    INT16   shift, and go to state 4
    INT32   shift, and go to state 5
    INT64   shift, and go to state 6
    PROC    shift, and go to state 7
    REAL32  shift, and go to state 8
    REAL64  shift, and go to state 9

    program                go to state 10
    block_definition_list  go to state 11
    block_definition       go to state 12
    counting_type          go to state 13
    data_type              go to state 14
    data_type_clist        go to state 15


state 1

  211 data_type: BOOL .

    $default  reduce using rule 211 (data_type)


state 2

  205 counting_type: BYTE .

    $default  reduce using rule 205 (counting_type)


state 3

  206 counting_type: INT .

    $default  reduce using rule 206 (counting_type)


state 4

  207 counting_type: INT16 .

    $default  reduce using rule 207 (counting_type)


state 5

  208 counting_type: INT32 .

    $default  reduce using rule 208 (counting_type)


state 6

  209 counting_type: INT64 .

    $default  reduce using rule 209 (counting_type)


state 7

   19 block_definition: PROC . name '(' formal_olist ')' NEWLINE RIND procedure_body ROUTD ':' NEWLINE

    IDENTIFIER  shift, and go to state 16

    name  go to state 17


state 8

  212 data_type: REAL32 .

    $default  reduce using rule 212 (data_type)


state 9

  213 data_type: REAL64 .

    $default  reduce using rule 213 (data_type)


state 10

    0 $accept: program . $end

    $end  shift, and go to state 18


state 11

    1 program: block_definition_list .
    3 block_definition_list: block_definition_list . block_definition

    BOOL    shift, and go to state 1
    BYTE    shift, and go to state 2
    INT     shift, and go to state 3
    INT16   shift, and go to state 4
    INT32   shift, and go to state 5
    INT64   shift, and go to state 6
    PROC    shift, and go to state 7
    REAL32  shift, and go to state 8
    REAL64  shift, and go to state 9

    $default  reduce using rule 1 (program)

    block_definition  go to state 19
    counting_type     go to state 13
    data_type         go to state 14
    data_type_clist   go to state 15


state 12

    2 block_definition_list: block_definition .

    $default  reduce using rule 2 (block_definition_list)


state 13

  210 data_type: counting_type .

    $default  reduce using rule 210 (data_type)


state 14

  214 data_type_clist: data_type .

    $default  reduce using rule 214 (data_type_clist)


state 15

   20 block_definition: data_type_clist . FUNCTION name '(' formal_olist ')' NEWLINE RIND function_body ROUTD ':' NEWLINE
  215 data_type_clist: data_type_clist . ',' data_type

    ','       shift, and go to state 20
    FUNCTION  shift, and go to state 21


state 16

  254 name: IDENTIFIER .

    $default  reduce using rule 254 (name)


state 17

   19 block_definition: PROC name . '(' formal_olist ')' NEWLINE RIND procedure_body ROUTD ':' NEWLINE

    '('  shift, and go to state 22


state 18

    0 $accept: program $end .

    $default  accept


state 19

    3 block_definition_list: block_definition_list block_definition .

    $default  reduce using rule 3 (block_definition_list)


state 20

  215 data_type_clist: data_type_clist ',' . data_type

    BOOL    shift, and go to state 1
    BYTE    shift, and go to state 2
    INT     shift, and go to state 3
    INT16   shift, and go to state 4
    INT32   shift, and go to state 5
    INT64   shift, and go to state 6
    REAL32  shift, and go to state 8
    REAL64  shift, and go to state 9

    counting_type  go to state 13
    data_type      go to state 23


state 21

   20 block_definition: data_type_clist FUNCTION . name '(' formal_olist ')' NEWLINE RIND function_body ROUTD ':' NEWLINE

    IDENTIFIER  shift, and go to state 16

    name  go to state 24


state 22

   19 block_definition: PROC name '(' . formal_olist ')' NEWLINE RIND procedure_body ROUTD ':' NEWLINE

    '['         shift, and go to state 25
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CHAN        shift, and go to state 26
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PORT        shift, and go to state 28
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 30

    $default  reduce using rule 130 (formal_olist)

    formal          go to state 31
    formal_clist    go to state 32
    formal_olist    go to state 33
    indef_type      go to state 34
    specifier       go to state 35
    array_type      go to state 36
    comms_type      go to state 37
    primitive_type  go to state 38
    type            go to state 39
    counting_type   go to state 13
    data_type       go to state 40


state 23

  215 data_type_clist: data_type_clist ',' data_type .

    $default  reduce using rule 215 (data_type_clist)


state 24

   20 block_definition: data_type_clist FUNCTION name . '(' formal_olist ')' NEWLINE RIND function_body ROUTD ':' NEWLINE

    '('  shift, and go to state 41


state 25

  134 indef_type: '[' . expression ']' indef_type
  162 array_type: '[' . expression ']' type

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 63
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 26

  163 comms_type: CHAN . OF protocol

    OF  shift, and go to state 76


state 27

  132 indef_type: INDEF_SPEC . type
  133           | INDEF_SPEC . indef_type

    '['         shift, and go to state 25
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CHAN        shift, and go to state 26
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PORT        shift, and go to state 28
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    TIMER       shift, and go to state 29

    indef_type      go to state 77
    array_type      go to state 36
    comms_type      go to state 37
    primitive_type  go to state 38
    type            go to state 78
    counting_type   go to state 13
    data_type       go to state 40


state 28

  165 comms_type: PORT . OF type

    OF  shift, and go to state 79


state 29

  164 comms_type: TIMER .

    $default  reduce using rule 164 (comms_type)


state 30

  127 formal: VAL . specifier name_clist

    '['         shift, and go to state 25
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CHAN        shift, and go to state 26
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PORT        shift, and go to state 28
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    TIMER       shift, and go to state 29

    indef_type      go to state 34
    specifier       go to state 80
    array_type      go to state 36
    comms_type      go to state 37
    primitive_type  go to state 38
    type            go to state 39
    counting_type   go to state 13
    data_type       go to state 40


state 31

  128 formal_clist: formal .

    $default  reduce using rule 128 (formal_clist)


state 32

  129 formal_clist: formal_clist . ',' formal
  131 formal_olist: formal_clist .

    ','  shift, and go to state 81

    $default  reduce using rule 131 (formal_olist)


state 33

   19 block_definition: PROC name '(' formal_olist . ')' NEWLINE RIND procedure_body ROUTD ':' NEWLINE

    ')'  shift, and go to state 82


state 34

  154 specifier: indef_type .

    $default  reduce using rule 154 (specifier)


state 35

  126 formal: specifier . name_clist

    IDENTIFIER  shift, and go to state 16

    name        go to state 83
    name_clist  go to state 84


state 36

  201 type: array_type .

    $default  reduce using rule 201 (type)


state 37

  189 primitive_type: comms_type .

    $default  reduce using rule 189 (primitive_type)


state 38

  200 type: primitive_type .

    $default  reduce using rule 200 (type)


state 39

  153 specifier: type .

    $default  reduce using rule 153 (specifier)


state 40

  190 primitive_type: data_type .

    $default  reduce using rule 190 (primitive_type)


state 41

   20 block_definition: data_type_clist FUNCTION name '(' . formal_olist ')' NEWLINE RIND function_body ROUTD ':' NEWLINE

    '['         shift, and go to state 25
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CHAN        shift, and go to state 26
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PORT        shift, and go to state 28
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 30

    $default  reduce using rule 130 (formal_olist)

    formal          go to state 31
    formal_clist    go to state 32
    formal_olist    go to state 85
    indef_type      go to state 34
    specifier       go to state 35
    array_type      go to state 36
    comms_type      go to state 37
    primitive_type  go to state 38
    type            go to state 39
    counting_type   go to state 13
    data_type       go to state 40


state 42

  187 operand: '(' . expression ')'

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 86
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 43

  253 monadic_operator: '-' .

    $default  reduce using rule 253 (monadic_operator)


state 44

  171 element: '[' . element FROM subscript FOR subscript ']'
  198 table: '[' . expression_clist ']'
  199      | '[' . table FROM subscript FOR count ']'

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 87
    expression        go to state 88
    expression_clist  go to state 89
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 90
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 45

  252 monadic_operator: '~' .

    $default  reduce using rule 252 (monadic_operator)


state 46

  248 monadic_operator: BITNOT .

    $default  reduce using rule 248 (monadic_operator)


state 47

  204 byte: BYTE_CONSTANT .

    $default  reduce using rule 204 (byte)


state 48

  247 literal: FALSE .

    $default  reduce using rule 247 (literal)


state 49

  239 integer: HEX_CONSTANT .

    $default  reduce using rule 239 (integer)


state 50

  238 integer: INT_CONSTANT .

    $default  reduce using rule 238 (integer)


state 51

  249 monadic_operator: MINUS .

    $default  reduce using rule 249 (monadic_operator)


state 52

  179 expression: MOSTNEG . data_type

    BOOL    shift, and go to state 1
    BYTE    shift, and go to state 2
    INT     shift, and go to state 3
    INT16   shift, and go to state 4
    INT32   shift, and go to state 5
    INT64   shift, and go to state 6
    REAL32  shift, and go to state 8
    REAL64  shift, and go to state 9

    counting_type  go to state 13
    data_type      go to state 91


state 53

  178 expression: MOSTPOS . data_type

    BOOL    shift, and go to state 1
    BYTE    shift, and go to state 2
    INT     shift, and go to state 3
    INT16   shift, and go to state 4
    INT32   shift, and go to state 5
    INT64   shift, and go to state 6
    REAL32  shift, and go to state 8
    REAL64  shift, and go to state 9

    counting_type  go to state 13
    data_type      go to state 92


state 54

  250 monadic_operator: NOT .

    $default  reduce using rule 250 (monadic_operator)


state 55

  257 real: REAL_CONSTANT .

    $default  reduce using rule 257 (real)


state 56

  251 monadic_operator: SIZE .

    $default  reduce using rule 251 (monadic_operator)


state 57

  259 string: STRING_LITERAL .

    $default  reduce using rule 259 (string)


state 58

  261 string_head: STRING_LITERAL_START .

    $default  reduce using rule 261 (string_head)


state 59

  246 literal: TRUE .

    $default  reduce using rule 246 (literal)


state 60

  160 andor_expression: andor_expression . andor_operator operand
  175 expression: andor_expression .

    AND  shift, and go to state 93
    OR   shift, and go to state 94

    $default  reduce using rule 175 (expression)

    andor_operator  go to state 95


state 61

  176 expression: conversion .

    $default  reduce using rule 176 (expression)


state 62

  170 element: element . '[' subscript ']'
  184 operand: element .

    '['  shift, and go to state 96

    $default  reduce using rule 184 (operand)


state 63

  134 indef_type: '[' expression . ']' indef_type
  162 array_type: '[' expression . ']' type

    ']'  shift, and go to state 97


state 64

  161 andor_expression: operand . andor_operator operand
  174 expression: operand . dyadic_operator operand
  177           | operand .

    '*'       shift, and go to state 98
    '+'       shift, and go to state 99
    '-'       shift, and go to state 100
    '/'       shift, and go to state 101
    '<'       shift, and go to state 102
    '>'       shift, and go to state 103
    '\\'      shift, and go to state 104
    AFTER     shift, and go to state 105
    AND       shift, and go to state 93
    AND_OP    shift, and go to state 106
    BITAND    shift, and go to state 107
    BITOR     shift, and go to state 108
    GE_OP     shift, and go to state 109
    LEFT_OP   shift, and go to state 110
    LE_OP     shift, and go to state 111
    MINUS     shift, and go to state 112
    NE_OP     shift, and go to state 113
    OR        shift, and go to state 94
    OR_OP     shift, and go to state 114
    PLUS      shift, and go to state 115
    REM       shift, and go to state 116
    RIGHT_OP  shift, and go to state 117
    TIMES     shift, and go to state 118
    XOR_OP    shift, and go to state 119

    $default  reduce using rule 177 (expression)

    andor_operator   go to state 120
    dyadic_operator  go to state 121


state 65

  166 conversion: primitive_type . operand
  167           | primitive_type . ROUND operand
  168           | primitive_type . TRUNC operand

    '('                   shift, and go to state 42
    '['                   shift, and go to state 44
    BYTE_CONSTANT         shift, and go to state 47
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT_CONSTANT          shift, and go to state 50
    REAL_CONSTANT         shift, and go to state 55
    ROUND                 shift, and go to state 122
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TRUE                  shift, and go to state 59
    TRUNC                 shift, and go to state 123

    element      go to state 62
    operand      go to state 124
    table        go to state 66
    byte         go to state 67
    integer      go to state 68
    literal      go to state 69
    name         go to state 71
    real         go to state 72
    scalar       go to state 73
    string       go to state 74
    string_head  go to state 75


state 66

  186 operand: table .
  197 table: table . '[' subscript ']'

    '['  shift, and go to state 125

    $default  reduce using rule 186 (operand)


state 67

  241 literal: byte .
  243        | byte . '(' data_type ')'

    '('  shift, and go to state 126

    $default  reduce using rule 241 (literal)


state 68

  240 literal: integer .
  242        | integer . '(' data_type ')'

    '('  shift, and go to state 127

    $default  reduce using rule 240 (literal)


state 69

  185 operand: literal .

    $default  reduce using rule 185 (operand)


state 70

  173 expression: monadic_operator . operand

    '('                   shift, and go to state 42
    '['                   shift, and go to state 44
    BYTE_CONSTANT         shift, and go to state 47
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT_CONSTANT          shift, and go to state 50
    REAL_CONSTANT         shift, and go to state 55
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TRUE                  shift, and go to state 59

    element      go to state 62
    operand      go to state 128
    table        go to state 66
    byte         go to state 67
    integer      go to state 68
    literal      go to state 69
    name         go to state 71
    real         go to state 72
    scalar       go to state 73
    string       go to state 74
    string_head  go to state 75


state 71

  188 operand: name . '(' expression_olist ')'
  258 scalar: name .

    '('  shift, and go to state 129

    $default  reduce using rule 258 (scalar)


state 72

  244 literal: real . '(' data_type ')'

    '('  shift, and go to state 130


state 73

  172 element: scalar .

    $default  reduce using rule 172 (element)


state 74

  245 literal: string .

    $default  reduce using rule 245 (literal)


state 75

  260 string: string_head . STRING_LITERAL_END
  262 string_head: string_head . STRING_LITERAL_MIDDLE

    STRING_LITERAL_END     shift, and go to state 131
    STRING_LITERAL_MIDDLE  shift, and go to state 132


state 76

  163 comms_type: CHAN OF . protocol

    '['         shift, and go to state 133
    ANY         shift, and go to state 134
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PORT        shift, and go to state 28
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    TIMER       shift, and go to state 29

    array_type       go to state 36
    comms_type       go to state 37
    primitive_type   go to state 38
    protocol         go to state 135
    simple_protocol  go to state 136
    type             go to state 137
    counting_type    go to state 138
    data_type        go to state 40
    name             go to state 139


state 77

  133 indef_type: INDEF_SPEC indef_type .

    $default  reduce using rule 133 (indef_type)


state 78

  132 indef_type: INDEF_SPEC type .

    $default  reduce using rule 132 (indef_type)


state 79

  165 comms_type: PORT OF . type

    '['     shift, and go to state 133
    BOOL    shift, and go to state 1
    BYTE    shift, and go to state 2
    CHAN    shift, and go to state 26
    INT     shift, and go to state 3
    INT16   shift, and go to state 4
    INT32   shift, and go to state 5
    INT64   shift, and go to state 6
    PORT    shift, and go to state 28
    REAL32  shift, and go to state 8
    REAL64  shift, and go to state 9
    TIMER   shift, and go to state 29

    array_type      go to state 36
    comms_type      go to state 37
    primitive_type  go to state 38
    type            go to state 140
    counting_type   go to state 13
    data_type       go to state 40


state 80

  127 formal: VAL specifier . name_clist

    IDENTIFIER  shift, and go to state 16

    name        go to state 83
    name_clist  go to state 141


state 81

  129 formal_clist: formal_clist ',' . formal

    '['         shift, and go to state 25
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CHAN        shift, and go to state 26
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PORT        shift, and go to state 28
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 30

    formal          go to state 142
    indef_type      go to state 34
    specifier       go to state 35
    array_type      go to state 36
    comms_type      go to state 37
    primitive_type  go to state 38
    type            go to state 39
    counting_type   go to state 13
    data_type       go to state 40


state 82

   19 block_definition: PROC name '(' formal_olist ')' . NEWLINE RIND procedure_body ROUTD ':' NEWLINE

    NEWLINE  shift, and go to state 143


state 83

  255 name_clist: name .

    $default  reduce using rule 255 (name_clist)


state 84

  126 formal: specifier name_clist .
  256 name_clist: name_clist . ',' name

    ','  shift, and go to state 144

    ','       [reduce using rule 126 (formal)]
    $default  reduce using rule 126 (formal)


state 85

   20 block_definition: data_type_clist FUNCTION name '(' formal_olist . ')' NEWLINE RIND function_body ROUTD ':' NEWLINE

    ')'  shift, and go to state 145


state 86

  187 operand: '(' expression . ')'

    ')'  shift, and go to state 146


state 87

  170 element: element . '[' subscript ']'
  171        | '[' element . FROM subscript FOR subscript ']'
  184 operand: element .

    '['   shift, and go to state 96
    FROM  shift, and go to state 147

    $default  reduce using rule 184 (operand)


state 88

  180 expression_clist: expression .

    $default  reduce using rule 180 (expression_clist)


state 89

  181 expression_clist: expression_clist . ',' expression
  198 table: '[' expression_clist . ']'

    ','  shift, and go to state 148
    ']'  shift, and go to state 149


state 90

  186 operand: table .
  197 table: table . '[' subscript ']'
  199      | '[' table . FROM subscript FOR count ']'

    '['   shift, and go to state 125
    FROM  shift, and go to state 150

    $default  reduce using rule 186 (operand)


state 91

  179 expression: MOSTNEG data_type .

    $default  reduce using rule 179 (expression)


state 92

  178 expression: MOSTPOS data_type .

    $default  reduce using rule 178 (expression)


state 93

  202 andor_operator: AND .

    $default  reduce using rule 202 (andor_operator)


state 94

  203 andor_operator: OR .

    $default  reduce using rule 203 (andor_operator)


state 95

  160 andor_expression: andor_expression andor_operator . operand

    '('                   shift, and go to state 42
    '['                   shift, and go to state 44
    BYTE_CONSTANT         shift, and go to state 47
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT_CONSTANT          shift, and go to state 50
    REAL_CONSTANT         shift, and go to state 55
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TRUE                  shift, and go to state 59

    element      go to state 62
    operand      go to state 151
    table        go to state 66
    byte         go to state 67
    integer      go to state 68
    literal      go to state 69
    name         go to state 71
    real         go to state 72
    scalar       go to state 73
    string       go to state 74
    string_head  go to state 75


state 96

  170 element: element '[' . subscript ']'

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 152
    operand           go to state 64
    primitive_type    go to state 65
    subscript         go to state 153
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 97

  134 indef_type: '[' expression ']' . indef_type
  162 array_type: '[' expression ']' . type

    '['         shift, and go to state 25
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CHAN        shift, and go to state 26
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PORT        shift, and go to state 28
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    TIMER       shift, and go to state 29

    indef_type      go to state 154
    array_type      go to state 36
    comms_type      go to state 37
    primitive_type  go to state 38
    type            go to state 155
    counting_type   go to state 13
    data_type       go to state 40


state 98

  233 dyadic_operator: '*' .

    $default  reduce using rule 233 (dyadic_operator)


state 99

  232 dyadic_operator: '+' .

    $default  reduce using rule 232 (dyadic_operator)


state 100

  231 dyadic_operator: '-' .

    $default  reduce using rule 231 (dyadic_operator)


state 101

  234 dyadic_operator: '/' .

    $default  reduce using rule 234 (dyadic_operator)


state 102

  236 dyadic_operator: '<' .

    $default  reduce using rule 236 (dyadic_operator)


state 103

  237 dyadic_operator: '>' .

    $default  reduce using rule 237 (dyadic_operator)


state 104

  235 dyadic_operator: '\\' .

    $default  reduce using rule 235 (dyadic_operator)


state 105

  216 dyadic_operator: AFTER .

    $default  reduce using rule 216 (dyadic_operator)


state 106

  225 dyadic_operator: AND_OP .

    $default  reduce using rule 225 (dyadic_operator)


state 107

  217 dyadic_operator: BITAND .

    $default  reduce using rule 217 (dyadic_operator)


state 108

  218 dyadic_operator: BITOR .

    $default  reduce using rule 218 (dyadic_operator)


state 109

  228 dyadic_operator: GE_OP .

    $default  reduce using rule 228 (dyadic_operator)


state 110

  224 dyadic_operator: LEFT_OP .

    $default  reduce using rule 224 (dyadic_operator)


state 111

  227 dyadic_operator: LE_OP .

    $default  reduce using rule 227 (dyadic_operator)


state 112

  219 dyadic_operator: MINUS .

    $default  reduce using rule 219 (dyadic_operator)


state 113

  230 dyadic_operator: NE_OP .

    $default  reduce using rule 230 (dyadic_operator)


state 114

  226 dyadic_operator: OR_OP .

    $default  reduce using rule 226 (dyadic_operator)


state 115

  220 dyadic_operator: PLUS .

    $default  reduce using rule 220 (dyadic_operator)


state 116

  221 dyadic_operator: REM .

    $default  reduce using rule 221 (dyadic_operator)


state 117

  223 dyadic_operator: RIGHT_OP .

    $default  reduce using rule 223 (dyadic_operator)


state 118

  222 dyadic_operator: TIMES .

    $default  reduce using rule 222 (dyadic_operator)


state 119

  229 dyadic_operator: XOR_OP .

    $default  reduce using rule 229 (dyadic_operator)


state 120

  161 andor_expression: operand andor_operator . operand

    '('                   shift, and go to state 42
    '['                   shift, and go to state 44
    BYTE_CONSTANT         shift, and go to state 47
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT_CONSTANT          shift, and go to state 50
    REAL_CONSTANT         shift, and go to state 55
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TRUE                  shift, and go to state 59

    element      go to state 62
    operand      go to state 156
    table        go to state 66
    byte         go to state 67
    integer      go to state 68
    literal      go to state 69
    name         go to state 71
    real         go to state 72
    scalar       go to state 73
    string       go to state 74
    string_head  go to state 75


state 121

  174 expression: operand dyadic_operator . operand

    '('                   shift, and go to state 42
    '['                   shift, and go to state 44
    BYTE_CONSTANT         shift, and go to state 47
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT_CONSTANT          shift, and go to state 50
    REAL_CONSTANT         shift, and go to state 55
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TRUE                  shift, and go to state 59

    element      go to state 62
    operand      go to state 157
    table        go to state 66
    byte         go to state 67
    integer      go to state 68
    literal      go to state 69
    name         go to state 71
    real         go to state 72
    scalar       go to state 73
    string       go to state 74
    string_head  go to state 75


state 122

  167 conversion: primitive_type ROUND . operand

    '('                   shift, and go to state 42
    '['                   shift, and go to state 44
    BYTE_CONSTANT         shift, and go to state 47
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT_CONSTANT          shift, and go to state 50
    REAL_CONSTANT         shift, and go to state 55
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TRUE                  shift, and go to state 59

    element      go to state 62
    operand      go to state 158
    table        go to state 66
    byte         go to state 67
    integer      go to state 68
    literal      go to state 69
    name         go to state 71
    real         go to state 72
    scalar       go to state 73
    string       go to state 74
    string_head  go to state 75


state 123

  168 conversion: primitive_type TRUNC . operand

    '('                   shift, and go to state 42
    '['                   shift, and go to state 44
    BYTE_CONSTANT         shift, and go to state 47
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT_CONSTANT          shift, and go to state 50
    REAL_CONSTANT         shift, and go to state 55
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TRUE                  shift, and go to state 59

    element      go to state 62
    operand      go to state 159
    table        go to state 66
    byte         go to state 67
    integer      go to state 68
    literal      go to state 69
    name         go to state 71
    real         go to state 72
    scalar       go to state 73
    string       go to state 74
    string_head  go to state 75


state 124

  166 conversion: primitive_type operand .

    $default  reduce using rule 166 (conversion)


state 125

  197 table: table '[' . subscript ']'

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 152
    operand           go to state 64
    primitive_type    go to state 65
    subscript         go to state 160
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 126

  243 literal: byte '(' . data_type ')'

    BOOL    shift, and go to state 1
    BYTE    shift, and go to state 2
    INT     shift, and go to state 3
    INT16   shift, and go to state 4
    INT32   shift, and go to state 5
    INT64   shift, and go to state 6
    REAL32  shift, and go to state 8
    REAL64  shift, and go to state 9

    counting_type  go to state 13
    data_type      go to state 161


state 127

  242 literal: integer '(' . data_type ')'

    BOOL    shift, and go to state 1
    BYTE    shift, and go to state 2
    INT     shift, and go to state 3
    INT16   shift, and go to state 4
    INT32   shift, and go to state 5
    INT64   shift, and go to state 6
    REAL32  shift, and go to state 8
    REAL64  shift, and go to state 9

    counting_type  go to state 13
    data_type      go to state 162


state 128

  173 expression: monadic_operator operand .

    $default  reduce using rule 173 (expression)


state 129

  188 operand: name '(' . expression_olist ')'

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    $default  reduce using rule 182 (expression_olist)

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 88
    expression_clist  go to state 163
    expression_olist  go to state 164
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 130

  244 literal: real '(' . data_type ')'

    BOOL    shift, and go to state 1
    BYTE    shift, and go to state 2
    INT     shift, and go to state 3
    INT16   shift, and go to state 4
    INT32   shift, and go to state 5
    INT64   shift, and go to state 6
    REAL32  shift, and go to state 8
    REAL64  shift, and go to state 9

    counting_type  go to state 13
    data_type      go to state 165


state 131

  260 string: string_head STRING_LITERAL_END .

    $default  reduce using rule 260 (string)


state 132

  262 string_head: string_head STRING_LITERAL_MIDDLE .

    $default  reduce using rule 262 (string_head)


state 133

  162 array_type: '[' . expression ']' type

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 166
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 134

  193 protocol: ANY .

    $default  reduce using rule 193 (protocol)


state 135

  163 comms_type: CHAN OF protocol .

    $default  reduce using rule 163 (comms_type)


state 136

  192 protocol: simple_protocol .

    $default  reduce using rule 192 (protocol)


state 137

  194 simple_protocol: type .

    $default  reduce using rule 194 (simple_protocol)


state 138

  195 simple_protocol: counting_type . DOUBLE_COLON INDEF_SPEC type
  210 data_type: counting_type .

    DOUBLE_COLON  shift, and go to state 167

    $default  reduce using rule 210 (data_type)


state 139

  191 protocol: name .

    $default  reduce using rule 191 (protocol)


state 140

  165 comms_type: PORT OF type .

    $default  reduce using rule 165 (comms_type)


state 141

  127 formal: VAL specifier name_clist .
  256 name_clist: name_clist . ',' name

    ','  shift, and go to state 144

    ','       [reduce using rule 127 (formal)]
    $default  reduce using rule 127 (formal)


state 142

  129 formal_clist: formal_clist ',' formal .

    $default  reduce using rule 129 (formal_clist)


state 143

   19 block_definition: PROC name '(' formal_olist ')' NEWLINE . RIND procedure_body ROUTD ':' NEWLINE

    RIND  shift, and go to state 168


state 144

  256 name_clist: name_clist ',' . name

    IDENTIFIER  shift, and go to state 16

    name  go to state 169


state 145

   20 block_definition: data_type_clist FUNCTION name '(' formal_olist ')' . NEWLINE RIND function_body ROUTD ':' NEWLINE

    NEWLINE  shift, and go to state 170


state 146

  187 operand: '(' expression ')' .

    $default  reduce using rule 187 (operand)


state 147

  171 element: '[' element FROM . subscript FOR subscript ']'

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 152
    operand           go to state 64
    primitive_type    go to state 65
    subscript         go to state 171
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 148

  181 expression_clist: expression_clist ',' . expression

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 172
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 149

  198 table: '[' expression_clist ']' .

    $default  reduce using rule 198 (table)


state 150

  199 table: '[' table FROM . subscript FOR count ']'

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 152
    operand           go to state 64
    primitive_type    go to state 65
    subscript         go to state 173
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 151

  160 andor_expression: andor_expression andor_operator operand .

    $default  reduce using rule 160 (andor_expression)


state 152

  196 subscript: expression .

    $default  reduce using rule 196 (subscript)


state 153

  170 element: element '[' subscript . ']'

    ']'  shift, and go to state 174


state 154

  134 indef_type: '[' expression ']' indef_type .

    $default  reduce using rule 134 (indef_type)


state 155

  162 array_type: '[' expression ']' type .

    $default  reduce using rule 162 (array_type)


state 156

  161 andor_expression: operand andor_operator operand .

    $default  reduce using rule 161 (andor_expression)


state 157

  174 expression: operand dyadic_operator operand .

    $default  reduce using rule 174 (expression)


state 158

  167 conversion: primitive_type ROUND operand .

    $default  reduce using rule 167 (conversion)


state 159

  168 conversion: primitive_type TRUNC operand .

    $default  reduce using rule 168 (conversion)


state 160

  197 table: table '[' subscript . ']'

    ']'  shift, and go to state 175


state 161

  243 literal: byte '(' data_type . ')'

    ')'  shift, and go to state 176


state 162

  242 literal: integer '(' data_type . ')'

    ')'  shift, and go to state 177


state 163

  181 expression_clist: expression_clist . ',' expression
  183 expression_olist: expression_clist .

    ','  shift, and go to state 148

    $default  reduce using rule 183 (expression_olist)


state 164

  188 operand: name '(' expression_olist . ')'

    ')'  shift, and go to state 178


state 165

  244 literal: real '(' data_type . ')'

    ')'  shift, and go to state 179


state 166

  162 array_type: '[' expression . ']' type

    ']'  shift, and go to state 180


state 167

  195 simple_protocol: counting_type DOUBLE_COLON . INDEF_SPEC type

    INDEF_SPEC  shift, and go to state 181


state 168

   19 block_definition: PROC name '(' formal_olist ')' NEWLINE RIND . procedure_body ROUTD ':' NEWLINE

    '['         shift, and go to state 182
    ALT         shift, and go to state 183
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CASE        shift, and go to state 185
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    IF          shift, and go to state 186
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PAR         shift, and go to state 187
    PLACE       shift, and go to state 188
    PLACED      shift, and go to state 189
    PORT        shift, and go to state 28
    PRI         shift, and go to state 190
    PROC        shift, and go to state 7
    PROCESSOR   shift, and go to state 191
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    SEQ         shift, and go to state 193
    SKIP        shift, and go to state 194
    STOP        shift, and go to state 195
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    WHILE       shift, and go to state 197

    alternation       go to state 198
    block_definition  go to state 199
    case_input        go to state 200
    conditional       go to state 201
    construction      go to state 202
    definition        go to state 203
    loop              go to state 204
    parallel          go to state 205
    placedpar         go to state 206
    procedure_body    go to state 207
    process           go to state 208
    selection         go to state 209
    sequence          go to state 210
    specification     go to state 211
    abbreviation      go to state 212
    action            go to state 213
    allocation        go to state 214
    declaration       go to state 215
    instance          go to state 216
    assignment        go to state 217
    channel           go to state 218
    delayed_input     go to state 219
    indef_type        go to state 34
    input             go to state 220
    output            go to state 221
    specifier         go to state 222
    variable          go to state 223
    variable_clist    go to state 224
    array_type        go to state 36
    comms_type        go to state 37
    element           go to state 225
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 229
    scalar            go to state 73


state 169

  256 name_clist: name_clist ',' name .

    $default  reduce using rule 256 (name_clist)


state 170

   20 block_definition: data_type_clist FUNCTION name '(' formal_olist ')' NEWLINE . RIND function_body ROUTD ':' NEWLINE

    RIND  shift, and go to state 230


state 171

  171 element: '[' element FROM subscript . FOR subscript ']'

    FOR  shift, and go to state 231


state 172

  181 expression_clist: expression_clist ',' expression .

    $default  reduce using rule 181 (expression_clist)


state 173

  199 table: '[' table FROM subscript . FOR count ']'

    FOR  shift, and go to state 232


state 174

  170 element: element '[' subscript ']' .

    $default  reduce using rule 170 (element)


state 175

  197 table: table '[' subscript ']' .

    $default  reduce using rule 197 (table)


state 176

  243 literal: byte '(' data_type ')' .

    $default  reduce using rule 243 (literal)


state 177

  242 literal: integer '(' data_type ')' .

    $default  reduce using rule 242 (literal)


state 178

  188 operand: name '(' expression_olist ')' .

    $default  reduce using rule 188 (operand)


state 179

  244 literal: real '(' data_type ')' .

    $default  reduce using rule 244 (literal)


state 180

  162 array_type: '[' expression ']' . type

    '['     shift, and go to state 133
    BOOL    shift, and go to state 1
    BYTE    shift, and go to state 2
    CHAN    shift, and go to state 26
    INT     shift, and go to state 3
    INT16   shift, and go to state 4
    INT32   shift, and go to state 5
    INT64   shift, and go to state 6
    PORT    shift, and go to state 28
    REAL32  shift, and go to state 8
    REAL64  shift, and go to state 9
    TIMER   shift, and go to state 29

    array_type      go to state 36
    comms_type      go to state 37
    primitive_type  go to state 38
    type            go to state 155
    counting_type   go to state 13
    data_type       go to state 40


state 181

  195 simple_protocol: counting_type DOUBLE_COLON INDEF_SPEC . type

    '['     shift, and go to state 133
    BOOL    shift, and go to state 1
    BYTE    shift, and go to state 2
    CHAN    shift, and go to state 26
    INT     shift, and go to state 3
    INT16   shift, and go to state 4
    INT32   shift, and go to state 5
    INT64   shift, and go to state 6
    PORT    shift, and go to state 28
    REAL32  shift, and go to state 8
    REAL64  shift, and go to state 9
    TIMER   shift, and go to state 29

    array_type      go to state 36
    comms_type      go to state 37
    primitive_type  go to state 38
    type            go to state 233
    counting_type   go to state 13
    data_type       go to state 40


state 182

  134 indef_type: '[' . expression ']' indef_type
  162 array_type: '[' . expression ']' type
  171 element: '[' . element FROM subscript FOR subscript ']'

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 87
    expression        go to state 63
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 183

    4 alternation: ALT . NEWLINE RIND alternative_vlist ROUTD
    5            | ALT . NEWLINE
    6            | ALT . replicator NEWLINE RIND alternative ROUTD

    IDENTIFIER  shift, and go to state 16
    NEWLINE     shift, and go to state 234

    replicator  go to state 235
    name        go to state 236


state 184

   40 definition: ANY . FUNCTION name '(' ')' NEWLINE RIND function_body ROUTD ':' NEWLINE

    FUNCTION  shift, and go to state 237


state 185

   78 selection: CASE . selector NEWLINE RIND option_vlist ROUTD
   79          | CASE . selector NEWLINE

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    selector          go to state 238
    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 239
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 186

   28 conditional: IF . NEWLINE RIND choice_vlist ROUTD
   29            | IF . NEWLINE
   30            | IF . replicator NEWLINE RIND choice ROUTD

    IDENTIFIER  shift, and go to state 16
    NEWLINE     shift, and go to state 240

    replicator  go to state 241
    name        go to state 236


state 187

   54 parallel: PAR . NEWLINE RIND process_vlist ROUTD
   55         | PAR . NEWLINE
   56         | PAR . replicator NEWLINE RIND process ROUTD

    IDENTIFIER  shift, and go to state 16
    NEWLINE     shift, and go to state 242

    replicator  go to state 243
    name        go to state 236


state 188

  100 allocation: PLACE . name AT expression ':' NEWLINE

    IDENTIFIER  shift, and go to state 16

    name  go to state 244


state 189

   61 placedpar: PLACED . PAR NEWLINE RIND placedpar_vlist ROUTD
   62          | PLACED . PAR NEWLINE
   63          | PLACED . PAR replicator NEWLINE RIND placedpar ROUTD

    PAR  shift, and go to state 245


state 190

    7 alternation: PRI . ALT NEWLINE RIND alternative_vlist ROUTD
    8            | PRI . ALT NEWLINE
    9            | PRI . ALT replicator NEWLINE RIND alternative ROUTD
   57 parallel: PRI . PAR NEWLINE RIND process_vlist ROUTD
   58         | PRI . PAR NEWLINE
   59         | PRI . PAR replicator NEWLINE RIND process ROUTD

    ALT  shift, and go to state 246
    PAR  shift, and go to state 247


state 191

   64 placedpar: PROCESSOR . expression NEWLINE RIND process ROUTD

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 248
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 192

   37 definition: PROTOCOL . name IS sequential_protocol ':' NEWLINE
   38           | PROTOCOL . name NEWLINE RIND CASE NEWLINE RIND tagged_protocol_vlist ROUTD ROUTD ':' NEWLINE
   39           | PROTOCOL . name NEWLINE RIND CASE NEWLINE ROUTD ':' NEWLINE

    IDENTIFIER  shift, and go to state 16

    name  go to state 249


state 193

   80 sequence: SEQ . NEWLINE RIND process_vlist ROUTD
   81         | SEQ . NEWLINE
   82         | SEQ . replicator NEWLINE RIND process ROUTD

    IDENTIFIER  shift, and go to state 16
    NEWLINE     shift, and go to state 250

    replicator  go to state 251
    name        go to state 236


state 194

   68 process: SKIP . NEWLINE

    NEWLINE  shift, and go to state 252


state 195

   69 process: STOP . NEWLINE

    NEWLINE  shift, and go to state 253


state 196

   43 definition: VAL . specifier name RETYPES expression ':' NEWLINE
   95 abbreviation: VAL . specifier name IS expression ':' NEWLINE
   96             | VAL . name IS expression ':' NEWLINE

    '['         shift, and go to state 25
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PORT        shift, and go to state 28
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    TIMER       shift, and go to state 29

    indef_type      go to state 34
    specifier       go to state 254
    array_type      go to state 36
    comms_type      go to state 37
    primitive_type  go to state 38
    type            go to state 39
    counting_type   go to state 13
    data_type       go to state 40
    name            go to state 255


state 197

   48 loop: WHILE . boolean NEWLINE RIND process ROUTD

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    boolean           go to state 256
    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 257
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 198

   36 construction: alternation .

    $default  reduce using rule 36 (construction)


state 199

   44 definition: block_definition .

    $default  reduce using rule 44 (definition)


state 200

   73 process: case_input .

    $default  reduce using rule 73 (process)


state 201

   32 construction: conditional .

    $default  reduce using rule 32 (construction)


state 202

   71 process: construction .

    $default  reduce using rule 71 (process)


state 203

   85 specification: definition .

    $default  reduce using rule 85 (specification)


state 204

   34 construction: loop .

    $default  reduce using rule 34 (construction)


state 205

   35 construction: parallel .

    $default  reduce using rule 35 (construction)


state 206

   60 parallel: placedpar .

    $default  reduce using rule 60 (parallel)


state 207

   19 block_definition: PROC name '(' formal_olist ')' NEWLINE RIND procedure_body . ROUTD ':' NEWLINE

    ROUTD  shift, and go to state 258


state 208

   67 procedure_body: process .

    $default  reduce using rule 67 (procedure_body)


state 209

   33 construction: selection .

    $default  reduce using rule 33 (construction)


state 210

   31 construction: sequence .

    $default  reduce using rule 31 (construction)


state 211

   74 process: specification . process

    '['         shift, and go to state 182
    ALT         shift, and go to state 183
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CASE        shift, and go to state 185
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    IF          shift, and go to state 186
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PAR         shift, and go to state 187
    PLACE       shift, and go to state 188
    PLACED      shift, and go to state 189
    PORT        shift, and go to state 28
    PRI         shift, and go to state 190
    PROC        shift, and go to state 7
    PROCESSOR   shift, and go to state 191
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    SEQ         shift, and go to state 193
    SKIP        shift, and go to state 194
    STOP        shift, and go to state 195
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    WHILE       shift, and go to state 197

    alternation       go to state 198
    block_definition  go to state 199
    case_input        go to state 200
    conditional       go to state 201
    construction      go to state 202
    definition        go to state 203
    loop              go to state 204
    parallel          go to state 205
    placedpar         go to state 206
    process           go to state 259
    selection         go to state 209
    sequence          go to state 210
    specification     go to state 211
    abbreviation      go to state 212
    action            go to state 213
    allocation        go to state 214
    declaration       go to state 215
    instance          go to state 216
    assignment        go to state 217
    channel           go to state 218
    delayed_input     go to state 219
    indef_type        go to state 34
    input             go to state 220
    output            go to state 221
    specifier         go to state 222
    variable          go to state 223
    variable_clist    go to state 224
    array_type        go to state 36
    comms_type        go to state 37
    element           go to state 225
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 229
    scalar            go to state 73


state 212

   84 specification: abbreviation .

    $default  reduce using rule 84 (specification)


state 213

   70 process: action .

    $default  reduce using rule 70 (process)


state 214

   75 process: allocation . process

    '['         shift, and go to state 182
    ALT         shift, and go to state 183
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CASE        shift, and go to state 185
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    IF          shift, and go to state 186
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PAR         shift, and go to state 187
    PLACE       shift, and go to state 188
    PLACED      shift, and go to state 189
    PORT        shift, and go to state 28
    PRI         shift, and go to state 190
    PROC        shift, and go to state 7
    PROCESSOR   shift, and go to state 191
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    SEQ         shift, and go to state 193
    SKIP        shift, and go to state 194
    STOP        shift, and go to state 195
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    WHILE       shift, and go to state 197

    alternation       go to state 198
    block_definition  go to state 199
    case_input        go to state 200
    conditional       go to state 201
    construction      go to state 202
    definition        go to state 203
    loop              go to state 204
    parallel          go to state 205
    placedpar         go to state 206
    process           go to state 260
    selection         go to state 209
    sequence          go to state 210
    specification     go to state 211
    abbreviation      go to state 212
    action            go to state 213
    allocation        go to state 214
    declaration       go to state 215
    instance          go to state 216
    assignment        go to state 217
    channel           go to state 218
    delayed_input     go to state 219
    indef_type        go to state 34
    input             go to state 220
    output            go to state 221
    specifier         go to state 222
    variable          go to state 223
    variable_clist    go to state 224
    array_type        go to state 36
    comms_type        go to state 37
    element           go to state 225
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 229
    scalar            go to state 73


state 215

   83 specification: declaration .

    $default  reduce using rule 83 (specification)


state 216

   72 process: instance .

    $default  reduce using rule 72 (process)


state 217

   97 action: assignment . NEWLINE

    NEWLINE  shift, and go to state 261


state 218

   21 case_input: channel . '?' CASE NEWLINE RIND variant_vlist ROUTD
   22           | channel . '?' CASE NEWLINE
  123 delayed_input: channel . '?' AFTER expression
  135 input: channel . '?' input_item_slist
  136      | channel . '?' CASE tagged_list
  142 output: channel . '!' output_item_slist
  143       | channel . '!' scalar ';' output_item_slist

    '!'  shift, and go to state 262
    '?'  shift, and go to state 263


state 219

  137 input: delayed_input .

    $default  reduce using rule 137 (input)


state 220

   98 action: input . NEWLINE

    NEWLINE  shift, and go to state 264


state 221

   99 action: output . NEWLINE

    NEWLINE  shift, and go to state 265


state 222

   42 definition: specifier . name RETYPES element ':' NEWLINE
   93 abbreviation: specifier . name IS element ':' NEWLINE

    IDENTIFIER  shift, and go to state 16

    name  go to state 266


state 223

  158 variable_clist: variable .

    $default  reduce using rule 158 (variable_clist)


state 224

  116 assignment: variable_clist . ASSIGN expression_list
  159 variable_clist: variable_clist . ',' variable

    ','     shift, and go to state 267
    ASSIGN  shift, and go to state 268


state 225

  122 channel: element .
  157 variable: element .
  170 element: element . '[' subscript ']'

    '['  shift, and go to state 96

    ','       reduce using rule 157 (variable)
    ASSIGN    reduce using rule 157 (variable)
    $default  reduce using rule 122 (channel)


state 226

  101 declaration: type . name_clist ':' NEWLINE
  153 specifier: type .

    IDENTIFIER  shift, and go to state 16

    IDENTIFIER  [reduce using rule 153 (specifier)]

    name        go to state 83
    name_clist  go to state 269


state 227

  190 primitive_type: data_type .
  214 data_type_clist: data_type .

    ','       reduce using rule 214 (data_type_clist)
    FUNCTION  reduce using rule 214 (data_type_clist)
    $default  reduce using rule 190 (primitive_type)


state 228

   20 block_definition: data_type_clist . FUNCTION name '(' formal_olist ')' NEWLINE RIND function_body ROUTD ':' NEWLINE
   41 definition: data_type_clist . FUNCTION name '(' formal_olist ')' IS expression_list ':' NEWLINE
  215 data_type_clist: data_type_clist . ',' data_type

    ','       shift, and go to state 20
    FUNCTION  shift, and go to state 270


state 229

   94 abbreviation: name . IS element ':' NEWLINE
  105 instance: name . '(' actual_olist ')' NEWLINE
  258 scalar: name .

    '('  shift, and go to state 271
    IS   shift, and go to state 272

    $default  reduce using rule 258 (scalar)


state 230

   20 block_definition: data_type_clist FUNCTION name '(' formal_olist ')' NEWLINE RIND . function_body ROUTD ':' NEWLINE

    '['         shift, and go to state 25
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PORT        shift, and go to state 28
    PROC        shift, and go to state 7
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    VALOF       shift, and go to state 273

    block_definition  go to state 199
    definition        go to state 203
    function_body     go to state 274
    specification     go to state 275
    valof             go to state 276
    value_process     go to state 277
    abbreviation      go to state 212
    declaration       go to state 215
    indef_type        go to state 34
    specifier         go to state 222
    array_type        go to state 36
    comms_type        go to state 37
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 278


state 231

  171 element: '[' element FROM subscript FOR . subscript ']'

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 152
    operand           go to state 64
    primitive_type    go to state 65
    subscript         go to state 279
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 232

  199 table: '[' table FROM subscript FOR . count ']'

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    count             go to state 280
    element           go to state 62
    expression        go to state 281
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 233

  195 simple_protocol: counting_type DOUBLE_COLON INDEF_SPEC type .

    $default  reduce using rule 195 (simple_protocol)


state 234

    4 alternation: ALT NEWLINE . RIND alternative_vlist ROUTD
    5            | ALT NEWLINE .

    RIND  shift, and go to state 282

    $default  reduce using rule 5 (alternation)


state 235

    6 alternation: ALT replicator . NEWLINE RIND alternative ROUTD

    NEWLINE  shift, and go to state 283


state 236

  148 replicator: name . '=' base FOR count

    '='  shift, and go to state 284


state 237

   40 definition: ANY FUNCTION . name '(' ')' NEWLINE RIND function_body ROUTD ':' NEWLINE

    IDENTIFIER  shift, and go to state 16

    name  go to state 285


state 238

   78 selection: CASE selector . NEWLINE RIND option_vlist ROUTD
   79          | CASE selector . NEWLINE

    NEWLINE  shift, and go to state 286


state 239

  149 selector: expression .

    $default  reduce using rule 149 (selector)


state 240

   28 conditional: IF NEWLINE . RIND choice_vlist ROUTD
   29            | IF NEWLINE .

    RIND  shift, and go to state 287

    $default  reduce using rule 29 (conditional)


state 241

   30 conditional: IF replicator . NEWLINE RIND choice ROUTD

    NEWLINE  shift, and go to state 288


state 242

   54 parallel: PAR NEWLINE . RIND process_vlist ROUTD
   55         | PAR NEWLINE .

    RIND  shift, and go to state 289

    $default  reduce using rule 55 (parallel)


state 243

   56 parallel: PAR replicator . NEWLINE RIND process ROUTD

    NEWLINE  shift, and go to state 290


state 244

  100 allocation: PLACE name . AT expression ':' NEWLINE

    AT  shift, and go to state 291


state 245

   61 placedpar: PLACED PAR . NEWLINE RIND placedpar_vlist ROUTD
   62          | PLACED PAR . NEWLINE
   63          | PLACED PAR . replicator NEWLINE RIND placedpar ROUTD

    IDENTIFIER  shift, and go to state 16
    NEWLINE     shift, and go to state 292

    replicator  go to state 293
    name        go to state 236


state 246

    7 alternation: PRI ALT . NEWLINE RIND alternative_vlist ROUTD
    8            | PRI ALT . NEWLINE
    9            | PRI ALT . replicator NEWLINE RIND alternative ROUTD

    IDENTIFIER  shift, and go to state 16
    NEWLINE     shift, and go to state 294

    replicator  go to state 295
    name        go to state 236


state 247

   57 parallel: PRI PAR . NEWLINE RIND process_vlist ROUTD
   58         | PRI PAR . NEWLINE
   59         | PRI PAR . replicator NEWLINE RIND process ROUTD

    IDENTIFIER  shift, and go to state 16
    NEWLINE     shift, and go to state 296

    replicator  go to state 297
    name        go to state 236


state 248

   64 placedpar: PROCESSOR expression . NEWLINE RIND process ROUTD

    NEWLINE  shift, and go to state 298


state 249

   37 definition: PROTOCOL name . IS sequential_protocol ':' NEWLINE
   38           | PROTOCOL name . NEWLINE RIND CASE NEWLINE RIND tagged_protocol_vlist ROUTD ROUTD ':' NEWLINE
   39           | PROTOCOL name . NEWLINE RIND CASE NEWLINE ROUTD ':' NEWLINE

    IS       shift, and go to state 299
    NEWLINE  shift, and go to state 300


state 250

   80 sequence: SEQ NEWLINE . RIND process_vlist ROUTD
   81         | SEQ NEWLINE .

    RIND  shift, and go to state 301

    $default  reduce using rule 81 (sequence)


state 251

   82 sequence: SEQ replicator . NEWLINE RIND process ROUTD

    NEWLINE  shift, and go to state 302


state 252

   68 process: SKIP NEWLINE .

    $default  reduce using rule 68 (process)


state 253

   69 process: STOP NEWLINE .

    $default  reduce using rule 69 (process)


state 254

   43 definition: VAL specifier . name RETYPES expression ':' NEWLINE
   95 abbreviation: VAL specifier . name IS expression ':' NEWLINE

    IDENTIFIER  shift, and go to state 16

    name  go to state 303


state 255

   96 abbreviation: VAL name . IS expression ':' NEWLINE

    IS  shift, and go to state 304


state 256

   48 loop: WHILE boolean . NEWLINE RIND process ROUTD

    NEWLINE  shift, and go to state 305


state 257

  118 boolean: expression .

    $default  reduce using rule 118 (boolean)


state 258

   19 block_definition: PROC name '(' formal_olist ')' NEWLINE RIND procedure_body ROUTD . ':' NEWLINE

    ':'  shift, and go to state 306


state 259

   74 process: specification process .

    $default  reduce using rule 74 (process)


state 260

   75 process: allocation process .

    $default  reduce using rule 75 (process)


state 261

   97 action: assignment NEWLINE .

    $default  reduce using rule 97 (action)


state 262

  142 output: channel '!' . output_item_slist
  143       | channel '!' . scalar ';' output_item_slist

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    output_item        go to state 307
    output_item_slist  go to state 308
    andor_expression   go to state 60
    comms_type         go to state 37
    conversion         go to state 61
    element            go to state 62
    expression         go to state 309
    operand            go to state 64
    primitive_type     go to state 65
    table              go to state 66
    byte               go to state 67
    counting_type      go to state 13
    data_type          go to state 40
    integer            go to state 68
    literal            go to state 69
    monadic_operator   go to state 70
    name               go to state 71
    real               go to state 72
    scalar             go to state 310
    string             go to state 74
    string_head        go to state 75


state 263

   21 case_input: channel '?' . CASE NEWLINE RIND variant_vlist ROUTD
   22           | channel '?' . CASE NEWLINE
  123 delayed_input: channel '?' . AFTER expression
  135 input: channel '?' . input_item_slist
  136      | channel '?' . CASE tagged_list

    '['         shift, and go to state 311
    AFTER       shift, and go to state 312
    CASE        shift, and go to state 313
    IDENTIFIER  shift, and go to state 16

    input_item        go to state 314
    input_item_slist  go to state 315
    variable          go to state 316
    element           go to state 317
    name              go to state 318
    scalar            go to state 73


state 264

   98 action: input NEWLINE .

    $default  reduce using rule 98 (action)


state 265

   99 action: output NEWLINE .

    $default  reduce using rule 99 (action)


state 266

   42 definition: specifier name . RETYPES element ':' NEWLINE
   93 abbreviation: specifier name . IS element ':' NEWLINE

    IS       shift, and go to state 319
    RETYPES  shift, and go to state 320


state 267

  159 variable_clist: variable_clist ',' . variable

    '['         shift, and go to state 311
    IDENTIFIER  shift, and go to state 16

    variable  go to state 321
    element   go to state 317
    name      go to state 318
    scalar    go to state 73


state 268

  116 assignment: variable_clist ASSIGN . expression_list

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    expression_list   go to state 322
    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 88
    expression_clist  go to state 323
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 324
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 269

  101 declaration: type name_clist . ':' NEWLINE
  256 name_clist: name_clist . ',' name

    ','  shift, and go to state 144
    ':'  shift, and go to state 325


state 270

   20 block_definition: data_type_clist FUNCTION . name '(' formal_olist ')' NEWLINE RIND function_body ROUTD ':' NEWLINE
   41 definition: data_type_clist FUNCTION . name '(' formal_olist ')' IS expression_list ':' NEWLINE

    IDENTIFIER  shift, and go to state 16

    name  go to state 326


state 271

  105 instance: name '(' . actual_olist ')' NEWLINE

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    $default  reduce using rule 114 (actual_olist)

    actual            go to state 327
    actual_clist      go to state 328
    actual_olist      go to state 329
    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 330
    expression        go to state 331
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 272

   94 abbreviation: name IS . element ':' NEWLINE

    '['         shift, and go to state 311
    IDENTIFIER  shift, and go to state 16

    element  go to state 332
    name     go to state 318
    scalar   go to state 73


state 273

   86 valof: VALOF . NEWLINE RIND process RESULT expression_list NEWLINE ROUTD

    NEWLINE  shift, and go to state 333


state 274

   20 block_definition: data_type_clist FUNCTION name '(' formal_olist ')' NEWLINE RIND function_body . ROUTD ':' NEWLINE

    ROUTD  shift, and go to state 334


state 275

   87 valof: specification . valof

    '['         shift, and go to state 25
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PORT        shift, and go to state 28
    PROC        shift, and go to state 7
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    VALOF       shift, and go to state 273

    block_definition  go to state 199
    definition        go to state 203
    specification     go to state 275
    valof             go to state 335
    abbreviation      go to state 212
    declaration       go to state 215
    indef_type        go to state 34
    specifier         go to state 222
    array_type        go to state 36
    comms_type        go to state 37
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 278


state 276

   88 value_process: valof .

    $default  reduce using rule 88 (value_process)


state 277

   45 function_body: value_process .

    $default  reduce using rule 45 (function_body)


state 278

   94 abbreviation: name . IS element ':' NEWLINE

    IS  shift, and go to state 272


state 279

  171 element: '[' element FROM subscript FOR subscript . ']'

    ']'  shift, and go to state 336


state 280

  199 table: '[' table FROM subscript FOR count . ']'

    ']'  shift, and go to state 337


state 281

  169 count: expression .

    $default  reduce using rule 169 (count)


state 282

    4 alternation: ALT NEWLINE RIND . alternative_vlist ROUTD

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 338
    '~'                   shift, and go to state 45
    ALT                   shift, and go to state 183
    ANY                   shift, and go to state 184
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INDEF_SPEC            shift, and go to state 27
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    PRI                   shift, and go to state 339
    PROC                  shift, and go to state 7
    PROTOCOL              shift, and go to state 192
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59
    VAL                   shift, and go to state 196

    alternation          go to state 340
    alternative          go to state 341
    alternative_vlist    go to state 342
    block_definition     go to state 199
    definition           go to state 203
    guarded_alternative  go to state 343
    specification        go to state 344
    abbreviation         go to state 212
    declaration          go to state 215
    guard                go to state 345
    boolean              go to state 346
    channel              go to state 347
    delayed_input        go to state 219
    indef_type           go to state 34
    input                go to state 348
    specifier            go to state 222
    andor_expression     go to state 60
    array_type           go to state 36
    comms_type           go to state 37
    conversion           go to state 61
    element              go to state 349
    expression           go to state 257
    operand              go to state 64
    primitive_type       go to state 350
    table                go to state 66
    type                 go to state 226
    byte                 go to state 67
    counting_type        go to state 13
    data_type            go to state 227
    data_type_clist      go to state 228
    integer              go to state 68
    literal              go to state 69
    monadic_operator     go to state 70
    name                 go to state 351
    real                 go to state 72
    scalar               go to state 73
    string               go to state 74
    string_head          go to state 75


state 283

    6 alternation: ALT replicator NEWLINE . RIND alternative ROUTD

    RIND  shift, and go to state 352


state 284

  148 replicator: name '=' . base FOR count

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    base              go to state 353
    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 354
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 285

   40 definition: ANY FUNCTION name . '(' ')' NEWLINE RIND function_body ROUTD ':' NEWLINE

    '('  shift, and go to state 355


state 286

   78 selection: CASE selector NEWLINE . RIND option_vlist ROUTD
   79          | CASE selector NEWLINE .

    RIND  shift, and go to state 356

    $default  reduce using rule 79 (selection)


state 287

   28 conditional: IF NEWLINE RIND . choice_vlist ROUTD

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 338
    '~'                   shift, and go to state 45
    ANY                   shift, and go to state 184
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    IF                    shift, and go to state 186
    INDEF_SPEC            shift, and go to state 27
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    PROC                  shift, and go to state 7
    PROTOCOL              shift, and go to state 192
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59
    VAL                   shift, and go to state 196

    block_definition  go to state 199
    choice            go to state 357
    choice_vlist      go to state 358
    conditional       go to state 359
    definition        go to state 203
    guarded_choice    go to state 360
    specification     go to state 361
    abbreviation      go to state 212
    declaration       go to state 215
    boolean           go to state 362
    indef_type        go to state 34
    specifier         go to state 222
    andor_expression  go to state 60
    array_type        go to state 36
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 257
    operand           go to state 64
    primitive_type    go to state 350
    table             go to state 66
    type              go to state 226
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 351
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 288

   30 conditional: IF replicator NEWLINE . RIND choice ROUTD

    RIND  shift, and go to state 363


state 289

   54 parallel: PAR NEWLINE RIND . process_vlist ROUTD

    '['         shift, and go to state 182
    ALT         shift, and go to state 183
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CASE        shift, and go to state 185
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    IF          shift, and go to state 186
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PAR         shift, and go to state 187
    PLACE       shift, and go to state 188
    PLACED      shift, and go to state 189
    PORT        shift, and go to state 28
    PRI         shift, and go to state 190
    PROC        shift, and go to state 7
    PROCESSOR   shift, and go to state 191
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    SEQ         shift, and go to state 193
    SKIP        shift, and go to state 194
    STOP        shift, and go to state 195
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    WHILE       shift, and go to state 197

    alternation       go to state 198
    block_definition  go to state 199
    case_input        go to state 200
    conditional       go to state 201
    construction      go to state 202
    definition        go to state 203
    loop              go to state 204
    parallel          go to state 205
    placedpar         go to state 206
    process           go to state 364
    process_vlist     go to state 365
    selection         go to state 209
    sequence          go to state 210
    specification     go to state 211
    abbreviation      go to state 212
    action            go to state 213
    allocation        go to state 214
    declaration       go to state 215
    instance          go to state 216
    assignment        go to state 217
    channel           go to state 218
    delayed_input     go to state 219
    indef_type        go to state 34
    input             go to state 220
    output            go to state 221
    specifier         go to state 222
    variable          go to state 223
    variable_clist    go to state 224
    array_type        go to state 36
    comms_type        go to state 37
    element           go to state 225
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 229
    scalar            go to state 73


state 290

   56 parallel: PAR replicator NEWLINE . RIND process ROUTD

    RIND  shift, and go to state 366


state 291

  100 allocation: PLACE name AT . expression ':' NEWLINE

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 367
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 292

   61 placedpar: PLACED PAR NEWLINE . RIND placedpar_vlist ROUTD
   62          | PLACED PAR NEWLINE .

    RIND  shift, and go to state 368

    $default  reduce using rule 62 (placedpar)


state 293

   63 placedpar: PLACED PAR replicator . NEWLINE RIND placedpar ROUTD

    NEWLINE  shift, and go to state 369


state 294

    7 alternation: PRI ALT NEWLINE . RIND alternative_vlist ROUTD
    8            | PRI ALT NEWLINE .

    RIND  shift, and go to state 370

    $default  reduce using rule 8 (alternation)


state 295

    9 alternation: PRI ALT replicator . NEWLINE RIND alternative ROUTD

    NEWLINE  shift, and go to state 371


state 296

   57 parallel: PRI PAR NEWLINE . RIND process_vlist ROUTD
   58         | PRI PAR NEWLINE .

    RIND  shift, and go to state 372

    $default  reduce using rule 58 (parallel)


state 297

   59 parallel: PRI PAR replicator . NEWLINE RIND process ROUTD

    NEWLINE  shift, and go to state 373


state 298

   64 placedpar: PROCESSOR expression NEWLINE . RIND process ROUTD

    RIND  shift, and go to state 374


state 299

   37 definition: PROTOCOL name IS . sequential_protocol ':' NEWLINE

    '['     shift, and go to state 133
    BOOL    shift, and go to state 1
    BYTE    shift, and go to state 2
    CHAN    shift, and go to state 26
    INT     shift, and go to state 3
    INT16   shift, and go to state 4
    INT32   shift, and go to state 5
    INT64   shift, and go to state 6
    PORT    shift, and go to state 28
    REAL32  shift, and go to state 8
    REAL64  shift, and go to state 9
    TIMER   shift, and go to state 29

    sequential_protocol    go to state 375
    simple_protocol_slist  go to state 376
    array_type             go to state 36
    comms_type             go to state 37
    primitive_type         go to state 38
    simple_protocol        go to state 377
    type                   go to state 137
    counting_type          go to state 138
    data_type              go to state 40


state 300

   38 definition: PROTOCOL name NEWLINE . RIND CASE NEWLINE RIND tagged_protocol_vlist ROUTD ROUTD ':' NEWLINE
   39           | PROTOCOL name NEWLINE . RIND CASE NEWLINE ROUTD ':' NEWLINE

    RIND  shift, and go to state 378


state 301

   80 sequence: SEQ NEWLINE RIND . process_vlist ROUTD

    '['         shift, and go to state 182
    ALT         shift, and go to state 183
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CASE        shift, and go to state 185
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    IF          shift, and go to state 186
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PAR         shift, and go to state 187
    PLACE       shift, and go to state 188
    PLACED      shift, and go to state 189
    PORT        shift, and go to state 28
    PRI         shift, and go to state 190
    PROC        shift, and go to state 7
    PROCESSOR   shift, and go to state 191
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    SEQ         shift, and go to state 193
    SKIP        shift, and go to state 194
    STOP        shift, and go to state 195
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    WHILE       shift, and go to state 197

    alternation       go to state 198
    block_definition  go to state 199
    case_input        go to state 200
    conditional       go to state 201
    construction      go to state 202
    definition        go to state 203
    loop              go to state 204
    parallel          go to state 205
    placedpar         go to state 206
    process           go to state 364
    process_vlist     go to state 379
    selection         go to state 209
    sequence          go to state 210
    specification     go to state 211
    abbreviation      go to state 212
    action            go to state 213
    allocation        go to state 214
    declaration       go to state 215
    instance          go to state 216
    assignment        go to state 217
    channel           go to state 218
    delayed_input     go to state 219
    indef_type        go to state 34
    input             go to state 220
    output            go to state 221
    specifier         go to state 222
    variable          go to state 223
    variable_clist    go to state 224
    array_type        go to state 36
    comms_type        go to state 37
    element           go to state 225
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 229
    scalar            go to state 73


state 302

   82 sequence: SEQ replicator NEWLINE . RIND process ROUTD

    RIND  shift, and go to state 380


state 303

   43 definition: VAL specifier name . RETYPES expression ':' NEWLINE
   95 abbreviation: VAL specifier name . IS expression ':' NEWLINE

    IS       shift, and go to state 381
    RETYPES  shift, and go to state 382


state 304

   96 abbreviation: VAL name IS . expression ':' NEWLINE

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 383
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 305

   48 loop: WHILE boolean NEWLINE . RIND process ROUTD

    RIND  shift, and go to state 384


state 306

   19 block_definition: PROC name '(' formal_olist ')' NEWLINE RIND procedure_body ROUTD ':' . NEWLINE

    NEWLINE  shift, and go to state 385


state 307

  146 output_item_slist: output_item .

    $default  reduce using rule 146 (output_item_slist)


state 308

  142 output: channel '!' output_item_slist .
  147 output_item_slist: output_item_slist . ';' output_item

    ';'  shift, and go to state 386

    $default  reduce using rule 142 (output)


state 309

  144 output_item: expression .
  145            | expression . DOUBLE_COLON expression

    DOUBLE_COLON  shift, and go to state 387

    $default  reduce using rule 144 (output_item)


state 310

  143 output: channel '!' scalar . ';' output_item_slist
  172 element: scalar .

    ';'  shift, and go to state 388

    ';'       [reduce using rule 172 (element)]
    $default  reduce using rule 172 (element)


state 311

  171 element: '[' . element FROM subscript FOR subscript ']'

    '['         shift, and go to state 311
    IDENTIFIER  shift, and go to state 16

    element  go to state 389
    name     go to state 318
    scalar   go to state 73


state 312

  123 delayed_input: channel '?' AFTER . expression

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 390
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 313

   21 case_input: channel '?' CASE . NEWLINE RIND variant_vlist ROUTD
   22           | channel '?' CASE . NEWLINE
  136 input: channel '?' CASE . tagged_list

    IDENTIFIER  shift, and go to state 16
    NEWLINE     shift, and go to state 391

    tagged_list  go to state 392
    name         go to state 318
    scalar       go to state 393


state 314

  140 input_item_slist: input_item .

    $default  reduce using rule 140 (input_item_slist)


state 315

  135 input: channel '?' input_item_slist .
  141 input_item_slist: input_item_slist . ';' input_item

    ';'  shift, and go to state 394

    $default  reduce using rule 135 (input)


state 316

  138 input_item: variable .
  139           | variable . DOUBLE_COLON variable

    DOUBLE_COLON  shift, and go to state 395

    $default  reduce using rule 138 (input_item)


state 317

  157 variable: element .
  170 element: element . '[' subscript ']'

    '['  shift, and go to state 96

    $default  reduce using rule 157 (variable)


state 318

  258 scalar: name .

    $default  reduce using rule 258 (scalar)


state 319

   93 abbreviation: specifier name IS . element ':' NEWLINE

    '['         shift, and go to state 311
    IDENTIFIER  shift, and go to state 16

    element  go to state 396
    name     go to state 318
    scalar   go to state 73


state 320

   42 definition: specifier name RETYPES . element ':' NEWLINE

    '['         shift, and go to state 311
    IDENTIFIER  shift, and go to state 16

    element  go to state 397
    name     go to state 318
    scalar   go to state 73


state 321

  159 variable_clist: variable_clist ',' variable .

    $default  reduce using rule 159 (variable_clist)


state 322

  116 assignment: variable_clist ASSIGN expression_list .

    $default  reduce using rule 116 (assignment)


state 323

  125 expression_list: expression_clist .
  181 expression_clist: expression_clist . ',' expression

    ','  shift, and go to state 148

    $default  reduce using rule 125 (expression_list)


state 324

  124 expression_list: name . '(' expression_olist ')'
  188 operand: name . '(' expression_olist ')'
  258 scalar: name .

    '('  shift, and go to state 398

    $default  reduce using rule 258 (scalar)


state 325

  101 declaration: type name_clist ':' . NEWLINE

    NEWLINE  shift, and go to state 399


state 326

   20 block_definition: data_type_clist FUNCTION name . '(' formal_olist ')' NEWLINE RIND function_body ROUTD ':' NEWLINE
   41 definition: data_type_clist FUNCTION name . '(' formal_olist ')' IS expression_list ':' NEWLINE

    '('  shift, and go to state 400


state 327

  112 actual_clist: actual .

    $default  reduce using rule 112 (actual_clist)


state 328

  113 actual_clist: actual_clist . ',' actual
  115 actual_olist: actual_clist .

    ','  shift, and go to state 401

    $default  reduce using rule 115 (actual_olist)


state 329

  105 instance: name '(' actual_olist . ')' NEWLINE

    ')'  shift, and go to state 402


state 330

  110 actual: element .
  170 element: element . '[' subscript ']'
  184 operand: element .

    '['  shift, and go to state 96

    ')'       reduce using rule 110 (actual)
    ')'       [reduce using rule 184 (operand)]
    ','       reduce using rule 110 (actual)
    ','       [reduce using rule 184 (operand)]
    $default  reduce using rule 184 (operand)


state 331

  111 actual: expression .

    $default  reduce using rule 111 (actual)


state 332

   94 abbreviation: name IS element . ':' NEWLINE
  170 element: element . '[' subscript ']'

    ':'  shift, and go to state 403
    '['  shift, and go to state 96


state 333

   86 valof: VALOF NEWLINE . RIND process RESULT expression_list NEWLINE ROUTD

    RIND  shift, and go to state 404


state 334

   20 block_definition: data_type_clist FUNCTION name '(' formal_olist ')' NEWLINE RIND function_body ROUTD . ':' NEWLINE

    ':'  shift, and go to state 405


state 335

   87 valof: specification valof .

    $default  reduce using rule 87 (valof)


state 336

  171 element: '[' element FROM subscript FOR subscript ']' .

    $default  reduce using rule 171 (element)


state 337

  199 table: '[' table FROM subscript FOR count ']' .

    $default  reduce using rule 199 (table)


state 338

  134 indef_type: '[' . expression ']' indef_type
  162 array_type: '[' . expression ']' type
  171 element: '[' . element FROM subscript FOR subscript ']'
  198 table: '[' . expression_clist ']'
  199      | '[' . table FROM subscript FOR count ']'

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 87
    expression        go to state 406
    expression_clist  go to state 89
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 90
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 339

    7 alternation: PRI . ALT NEWLINE RIND alternative_vlist ROUTD
    8            | PRI . ALT NEWLINE
    9            | PRI . ALT replicator NEWLINE RIND alternative ROUTD

    ALT  shift, and go to state 246


state 340

   11 alternative: alternation .

    $default  reduce using rule 11 (alternative)


state 341

   17 alternative_vlist: alternative .

    $default  reduce using rule 17 (alternative_vlist)


state 342

    4 alternation: ALT NEWLINE RIND alternative_vlist . ROUTD
   18 alternative_vlist: alternative_vlist . alternative

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 338
    '~'                   shift, and go to state 45
    ALT                   shift, and go to state 183
    ANY                   shift, and go to state 184
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INDEF_SPEC            shift, and go to state 27
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    PRI                   shift, and go to state 339
    PROC                  shift, and go to state 7
    PROTOCOL              shift, and go to state 192
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    ROUTD                 shift, and go to state 407
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59
    VAL                   shift, and go to state 196

    alternation          go to state 340
    alternative          go to state 408
    block_definition     go to state 199
    definition           go to state 203
    guarded_alternative  go to state 343
    specification        go to state 344
    abbreviation         go to state 212
    declaration          go to state 215
    guard                go to state 345
    boolean              go to state 346
    channel              go to state 347
    delayed_input        go to state 219
    indef_type           go to state 34
    input                go to state 348
    specifier            go to state 222
    andor_expression     go to state 60
    array_type           go to state 36
    comms_type           go to state 37
    conversion           go to state 61
    element              go to state 349
    expression           go to state 257
    operand              go to state 64
    primitive_type       go to state 350
    table                go to state 66
    type                 go to state 226
    byte                 go to state 67
    counting_type        go to state 13
    data_type            go to state 227
    data_type_clist      go to state 228
    integer              go to state 68
    literal              go to state 69
    monadic_operator     go to state 70
    name                 go to state 351
    real                 go to state 72
    scalar               go to state 73
    string               go to state 74
    string_head          go to state 75


state 343

   10 alternative: guarded_alternative .

    $default  reduce using rule 10 (alternative)


state 344

   12 alternative: specification . alternative

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 338
    '~'                   shift, and go to state 45
    ALT                   shift, and go to state 183
    ANY                   shift, and go to state 184
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INDEF_SPEC            shift, and go to state 27
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    PRI                   shift, and go to state 339
    PROC                  shift, and go to state 7
    PROTOCOL              shift, and go to state 192
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59
    VAL                   shift, and go to state 196

    alternation          go to state 340
    alternative          go to state 409
    block_definition     go to state 199
    definition           go to state 203
    guarded_alternative  go to state 343
    specification        go to state 344
    abbreviation         go to state 212
    declaration          go to state 215
    guard                go to state 345
    boolean              go to state 346
    channel              go to state 347
    delayed_input        go to state 219
    indef_type           go to state 34
    input                go to state 348
    specifier            go to state 222
    andor_expression     go to state 60
    array_type           go to state 36
    comms_type           go to state 37
    conversion           go to state 61
    element              go to state 349
    expression           go to state 257
    operand              go to state 64
    primitive_type       go to state 350
    table                go to state 66
    type                 go to state 226
    byte                 go to state 67
    counting_type        go to state 13
    data_type            go to state 227
    data_type_clist      go to state 228
    integer              go to state 68
    literal              go to state 69
    monadic_operator     go to state 70
    name                 go to state 351
    real                 go to state 72
    scalar               go to state 73
    string               go to state 74
    string_head          go to state 75


state 345

   46 guarded_alternative: guard . RIND process ROUTD

    RIND  shift, and go to state 410


state 346

   15 alternative: boolean . '&' channel '?' CASE NEWLINE RIND variant_vlist ROUTD
   16            | boolean . '&' channel '?' CASE NEWLINE
  103 guard: boolean . '&' input NEWLINE
  104      | boolean . '&' SKIP NEWLINE

    '&'  shift, and go to state 411


state 347

   13 alternative: channel . '?' CASE NEWLINE RIND variant_vlist ROUTD
   14            | channel . '?' CASE NEWLINE
  123 delayed_input: channel . '?' AFTER expression
  135 input: channel . '?' input_item_slist
  136      | channel . '?' CASE tagged_list

    '?'  shift, and go to state 412


state 348

  102 guard: input . NEWLINE

    NEWLINE  shift, and go to state 413


state 349

  122 channel: element .
  170 element: element . '[' subscript ']'
  184 operand: element .

    '['  shift, and go to state 96

    '?'       reduce using rule 122 (channel)
    $default  reduce using rule 184 (operand)


state 350

  166 conversion: primitive_type . operand
  167           | primitive_type . ROUND operand
  168           | primitive_type . TRUNC operand
  200 type: primitive_type .

    '('                   shift, and go to state 42
    '['                   shift, and go to state 44
    BYTE_CONSTANT         shift, and go to state 47
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT_CONSTANT          shift, and go to state 50
    REAL_CONSTANT         shift, and go to state 55
    ROUND                 shift, and go to state 122
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TRUE                  shift, and go to state 59
    TRUNC                 shift, and go to state 123

    IDENTIFIER  [reduce using rule 200 (type)]

    element      go to state 62
    operand      go to state 124
    table        go to state 66
    byte         go to state 67
    integer      go to state 68
    literal      go to state 69
    name         go to state 71
    real         go to state 72
    scalar       go to state 73
    string       go to state 74
    string_head  go to state 75


state 351

   94 abbreviation: name . IS element ':' NEWLINE
  188 operand: name . '(' expression_olist ')'
  258 scalar: name .

    '('  shift, and go to state 129
    IS   shift, and go to state 272

    $default  reduce using rule 258 (scalar)


state 352

    6 alternation: ALT replicator NEWLINE RIND . alternative ROUTD

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 338
    '~'                   shift, and go to state 45
    ALT                   shift, and go to state 183
    ANY                   shift, and go to state 184
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INDEF_SPEC            shift, and go to state 27
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    PRI                   shift, and go to state 339
    PROC                  shift, and go to state 7
    PROTOCOL              shift, and go to state 192
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59
    VAL                   shift, and go to state 196

    alternation          go to state 340
    alternative          go to state 414
    block_definition     go to state 199
    definition           go to state 203
    guarded_alternative  go to state 343
    specification        go to state 344
    abbreviation         go to state 212
    declaration          go to state 215
    guard                go to state 345
    boolean              go to state 346
    channel              go to state 347
    delayed_input        go to state 219
    indef_type           go to state 34
    input                go to state 348
    specifier            go to state 222
    andor_expression     go to state 60
    array_type           go to state 36
    comms_type           go to state 37
    conversion           go to state 61
    element              go to state 349
    expression           go to state 257
    operand              go to state 64
    primitive_type       go to state 350
    table                go to state 66
    type                 go to state 226
    byte                 go to state 67
    counting_type        go to state 13
    data_type            go to state 227
    data_type_clist      go to state 228
    integer              go to state 68
    literal              go to state 69
    monadic_operator     go to state 70
    name                 go to state 351
    real                 go to state 72
    scalar               go to state 73
    string               go to state 74
    string_head          go to state 75


state 353

  148 replicator: name '=' base . FOR count

    FOR  shift, and go to state 415


state 354

  117 base: expression .

    $default  reduce using rule 117 (base)


state 355

   40 definition: ANY FUNCTION name '(' . ')' NEWLINE RIND function_body ROUTD ':' NEWLINE

    ')'  shift, and go to state 416


state 356

   78 selection: CASE selector NEWLINE RIND . option_vlist ROUTD

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 338
    '~'                   shift, and go to state 45
    ANY                   shift, and go to state 184
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    ELSE                  shift, and go to state 417
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INDEF_SPEC            shift, and go to state 27
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    PROC                  shift, and go to state 7
    PROTOCOL              shift, and go to state 192
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59
    VAL                   shift, and go to state 196

    block_definition       go to state 199
    definition             go to state 203
    option                 go to state 418
    option_vlist           go to state 419
    specification          go to state 420
    abbreviation           go to state 212
    declaration            go to state 215
    case_expression        go to state 421
    case_expression_clist  go to state 422
    indef_type             go to state 34
    specifier              go to state 222
    andor_expression       go to state 60
    array_type             go to state 36
    comms_type             go to state 37
    conversion             go to state 61
    element                go to state 62
    expression             go to state 423
    operand                go to state 64
    primitive_type         go to state 350
    table                  go to state 66
    type                   go to state 226
    byte                   go to state 67
    counting_type          go to state 13
    data_type              go to state 227
    data_type_clist        go to state 228
    integer                go to state 68
    literal                go to state 69
    monadic_operator       go to state 70
    name                   go to state 351
    real                   go to state 72
    scalar                 go to state 73
    string                 go to state 74
    string_head            go to state 75


state 357

   26 choice_vlist: choice .

    $default  reduce using rule 26 (choice_vlist)


state 358

   27 choice_vlist: choice_vlist . choice
   28 conditional: IF NEWLINE RIND choice_vlist . ROUTD

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 338
    '~'                   shift, and go to state 45
    ANY                   shift, and go to state 184
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    IF                    shift, and go to state 186
    INDEF_SPEC            shift, and go to state 27
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    PROC                  shift, and go to state 7
    PROTOCOL              shift, and go to state 192
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    ROUTD                 shift, and go to state 424
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59
    VAL                   shift, and go to state 196

    block_definition  go to state 199
    choice            go to state 425
    conditional       go to state 359
    definition        go to state 203
    guarded_choice    go to state 360
    specification     go to state 361
    abbreviation      go to state 212
    declaration       go to state 215
    boolean           go to state 362
    indef_type        go to state 34
    specifier         go to state 222
    andor_expression  go to state 60
    array_type        go to state 36
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 257
    operand           go to state 64
    primitive_type    go to state 350
    table             go to state 66
    type              go to state 226
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 351
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 359

   24 choice: conditional .

    $default  reduce using rule 24 (choice)


state 360

   23 choice: guarded_choice .

    $default  reduce using rule 23 (choice)


state 361

   25 choice: specification . choice

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 338
    '~'                   shift, and go to state 45
    ANY                   shift, and go to state 184
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    IF                    shift, and go to state 186
    INDEF_SPEC            shift, and go to state 27
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    PROC                  shift, and go to state 7
    PROTOCOL              shift, and go to state 192
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59
    VAL                   shift, and go to state 196

    block_definition  go to state 199
    choice            go to state 426
    conditional       go to state 359
    definition        go to state 203
    guarded_choice    go to state 360
    specification     go to state 361
    abbreviation      go to state 212
    declaration       go to state 215
    boolean           go to state 362
    indef_type        go to state 34
    specifier         go to state 222
    andor_expression  go to state 60
    array_type        go to state 36
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 257
    operand           go to state 64
    primitive_type    go to state 350
    table             go to state 66
    type              go to state 226
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 351
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 362

   47 guarded_choice: boolean . NEWLINE RIND process ROUTD

    NEWLINE  shift, and go to state 427


state 363

   30 conditional: IF replicator NEWLINE RIND . choice ROUTD

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 338
    '~'                   shift, and go to state 45
    ANY                   shift, and go to state 184
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    IF                    shift, and go to state 186
    INDEF_SPEC            shift, and go to state 27
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    PROC                  shift, and go to state 7
    PROTOCOL              shift, and go to state 192
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59
    VAL                   shift, and go to state 196

    block_definition  go to state 199
    choice            go to state 428
    conditional       go to state 359
    definition        go to state 203
    guarded_choice    go to state 360
    specification     go to state 361
    abbreviation      go to state 212
    declaration       go to state 215
    boolean           go to state 362
    indef_type        go to state 34
    specifier         go to state 222
    andor_expression  go to state 60
    array_type        go to state 36
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 257
    operand           go to state 64
    primitive_type    go to state 350
    table             go to state 66
    type              go to state 226
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 351
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 364

   76 process_vlist: process .

    $default  reduce using rule 76 (process_vlist)


state 365

   54 parallel: PAR NEWLINE RIND process_vlist . ROUTD
   77 process_vlist: process_vlist . process

    '['         shift, and go to state 182
    ALT         shift, and go to state 183
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CASE        shift, and go to state 185
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    IF          shift, and go to state 186
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PAR         shift, and go to state 187
    PLACE       shift, and go to state 188
    PLACED      shift, and go to state 189
    PORT        shift, and go to state 28
    PRI         shift, and go to state 190
    PROC        shift, and go to state 7
    PROCESSOR   shift, and go to state 191
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    ROUTD       shift, and go to state 429
    SEQ         shift, and go to state 193
    SKIP        shift, and go to state 194
    STOP        shift, and go to state 195
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    WHILE       shift, and go to state 197

    alternation       go to state 198
    block_definition  go to state 199
    case_input        go to state 200
    conditional       go to state 201
    construction      go to state 202
    definition        go to state 203
    loop              go to state 204
    parallel          go to state 205
    placedpar         go to state 206
    process           go to state 430
    selection         go to state 209
    sequence          go to state 210
    specification     go to state 211
    abbreviation      go to state 212
    action            go to state 213
    allocation        go to state 214
    declaration       go to state 215
    instance          go to state 216
    assignment        go to state 217
    channel           go to state 218
    delayed_input     go to state 219
    indef_type        go to state 34
    input             go to state 220
    output            go to state 221
    specifier         go to state 222
    variable          go to state 223
    variable_clist    go to state 224
    array_type        go to state 36
    comms_type        go to state 37
    element           go to state 225
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 229
    scalar            go to state 73


state 366

   56 parallel: PAR replicator NEWLINE RIND . process ROUTD

    '['         shift, and go to state 182
    ALT         shift, and go to state 183
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CASE        shift, and go to state 185
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    IF          shift, and go to state 186
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PAR         shift, and go to state 187
    PLACE       shift, and go to state 188
    PLACED      shift, and go to state 189
    PORT        shift, and go to state 28
    PRI         shift, and go to state 190
    PROC        shift, and go to state 7
    PROCESSOR   shift, and go to state 191
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    SEQ         shift, and go to state 193
    SKIP        shift, and go to state 194
    STOP        shift, and go to state 195
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    WHILE       shift, and go to state 197

    alternation       go to state 198
    block_definition  go to state 199
    case_input        go to state 200
    conditional       go to state 201
    construction      go to state 202
    definition        go to state 203
    loop              go to state 204
    parallel          go to state 205
    placedpar         go to state 206
    process           go to state 431
    selection         go to state 209
    sequence          go to state 210
    specification     go to state 211
    abbreviation      go to state 212
    action            go to state 213
    allocation        go to state 214
    declaration       go to state 215
    instance          go to state 216
    assignment        go to state 217
    channel           go to state 218
    delayed_input     go to state 219
    indef_type        go to state 34
    input             go to state 220
    output            go to state 221
    specifier         go to state 222
    variable          go to state 223
    variable_clist    go to state 224
    array_type        go to state 36
    comms_type        go to state 37
    element           go to state 225
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 229
    scalar            go to state 73


state 367

  100 allocation: PLACE name AT expression . ':' NEWLINE

    ':'  shift, and go to state 432


state 368

   61 placedpar: PLACED PAR NEWLINE RIND . placedpar_vlist ROUTD

    PLACED     shift, and go to state 189
    PROCESSOR  shift, and go to state 191

    placedpar        go to state 433
    placedpar_vlist  go to state 434


state 369

   63 placedpar: PLACED PAR replicator NEWLINE . RIND placedpar ROUTD

    RIND  shift, and go to state 435


state 370

    7 alternation: PRI ALT NEWLINE RIND . alternative_vlist ROUTD

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 338
    '~'                   shift, and go to state 45
    ALT                   shift, and go to state 183
    ANY                   shift, and go to state 184
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INDEF_SPEC            shift, and go to state 27
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    PRI                   shift, and go to state 339
    PROC                  shift, and go to state 7
    PROTOCOL              shift, and go to state 192
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59
    VAL                   shift, and go to state 196

    alternation          go to state 340
    alternative          go to state 341
    alternative_vlist    go to state 436
    block_definition     go to state 199
    definition           go to state 203
    guarded_alternative  go to state 343
    specification        go to state 344
    abbreviation         go to state 212
    declaration          go to state 215
    guard                go to state 345
    boolean              go to state 346
    channel              go to state 347
    delayed_input        go to state 219
    indef_type           go to state 34
    input                go to state 348
    specifier            go to state 222
    andor_expression     go to state 60
    array_type           go to state 36
    comms_type           go to state 37
    conversion           go to state 61
    element              go to state 349
    expression           go to state 257
    operand              go to state 64
    primitive_type       go to state 350
    table                go to state 66
    type                 go to state 226
    byte                 go to state 67
    counting_type        go to state 13
    data_type            go to state 227
    data_type_clist      go to state 228
    integer              go to state 68
    literal              go to state 69
    monadic_operator     go to state 70
    name                 go to state 351
    real                 go to state 72
    scalar               go to state 73
    string               go to state 74
    string_head          go to state 75


state 371

    9 alternation: PRI ALT replicator NEWLINE . RIND alternative ROUTD

    RIND  shift, and go to state 437


state 372

   57 parallel: PRI PAR NEWLINE RIND . process_vlist ROUTD

    '['         shift, and go to state 182
    ALT         shift, and go to state 183
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CASE        shift, and go to state 185
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    IF          shift, and go to state 186
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PAR         shift, and go to state 187
    PLACE       shift, and go to state 188
    PLACED      shift, and go to state 189
    PORT        shift, and go to state 28
    PRI         shift, and go to state 190
    PROC        shift, and go to state 7
    PROCESSOR   shift, and go to state 191
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    SEQ         shift, and go to state 193
    SKIP        shift, and go to state 194
    STOP        shift, and go to state 195
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    WHILE       shift, and go to state 197

    alternation       go to state 198
    block_definition  go to state 199
    case_input        go to state 200
    conditional       go to state 201
    construction      go to state 202
    definition        go to state 203
    loop              go to state 204
    parallel          go to state 205
    placedpar         go to state 206
    process           go to state 364
    process_vlist     go to state 438
    selection         go to state 209
    sequence          go to state 210
    specification     go to state 211
    abbreviation      go to state 212
    action            go to state 213
    allocation        go to state 214
    declaration       go to state 215
    instance          go to state 216
    assignment        go to state 217
    channel           go to state 218
    delayed_input     go to state 219
    indef_type        go to state 34
    input             go to state 220
    output            go to state 221
    specifier         go to state 222
    variable          go to state 223
    variable_clist    go to state 224
    array_type        go to state 36
    comms_type        go to state 37
    element           go to state 225
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 229
    scalar            go to state 73


state 373

   59 parallel: PRI PAR replicator NEWLINE . RIND process ROUTD

    RIND  shift, and go to state 439


state 374

   64 placedpar: PROCESSOR expression NEWLINE RIND . process ROUTD

    '['         shift, and go to state 182
    ALT         shift, and go to state 183
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CASE        shift, and go to state 185
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    IF          shift, and go to state 186
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PAR         shift, and go to state 187
    PLACE       shift, and go to state 188
    PLACED      shift, and go to state 189
    PORT        shift, and go to state 28
    PRI         shift, and go to state 190
    PROC        shift, and go to state 7
    PROCESSOR   shift, and go to state 191
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    SEQ         shift, and go to state 193
    SKIP        shift, and go to state 194
    STOP        shift, and go to state 195
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    WHILE       shift, and go to state 197

    alternation       go to state 198
    block_definition  go to state 199
    case_input        go to state 200
    conditional       go to state 201
    construction      go to state 202
    definition        go to state 203
    loop              go to state 204
    parallel          go to state 205
    placedpar         go to state 206
    process           go to state 440
    selection         go to state 209
    sequence          go to state 210
    specification     go to state 211
    abbreviation      go to state 212
    action            go to state 213
    allocation        go to state 214
    declaration       go to state 215
    instance          go to state 216
    assignment        go to state 217
    channel           go to state 218
    delayed_input     go to state 219
    indef_type        go to state 34
    input             go to state 220
    output            go to state 221
    specifier         go to state 222
    variable          go to state 223
    variable_clist    go to state 224
    array_type        go to state 36
    comms_type        go to state 37
    element           go to state 225
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 229
    scalar            go to state 73


state 375

   37 definition: PROTOCOL name IS sequential_protocol . ':' NEWLINE

    ':'  shift, and go to state 441


state 376

  150 sequential_protocol: simple_protocol_slist .
  152 simple_protocol_slist: simple_protocol_slist . ';' simple_protocol

    ';'  shift, and go to state 442

    $default  reduce using rule 150 (sequential_protocol)


state 377

  151 simple_protocol_slist: simple_protocol .

    $default  reduce using rule 151 (simple_protocol_slist)


state 378

   38 definition: PROTOCOL name NEWLINE RIND . CASE NEWLINE RIND tagged_protocol_vlist ROUTD ROUTD ':' NEWLINE
   39           | PROTOCOL name NEWLINE RIND . CASE NEWLINE ROUTD ':' NEWLINE

    CASE  shift, and go to state 443


state 379

   77 process_vlist: process_vlist . process
   80 sequence: SEQ NEWLINE RIND process_vlist . ROUTD

    '['         shift, and go to state 182
    ALT         shift, and go to state 183
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CASE        shift, and go to state 185
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    IF          shift, and go to state 186
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PAR         shift, and go to state 187
    PLACE       shift, and go to state 188
    PLACED      shift, and go to state 189
    PORT        shift, and go to state 28
    PRI         shift, and go to state 190
    PROC        shift, and go to state 7
    PROCESSOR   shift, and go to state 191
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    ROUTD       shift, and go to state 444
    SEQ         shift, and go to state 193
    SKIP        shift, and go to state 194
    STOP        shift, and go to state 195
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    WHILE       shift, and go to state 197

    alternation       go to state 198
    block_definition  go to state 199
    case_input        go to state 200
    conditional       go to state 201
    construction      go to state 202
    definition        go to state 203
    loop              go to state 204
    parallel          go to state 205
    placedpar         go to state 206
    process           go to state 430
    selection         go to state 209
    sequence          go to state 210
    specification     go to state 211
    abbreviation      go to state 212
    action            go to state 213
    allocation        go to state 214
    declaration       go to state 215
    instance          go to state 216
    assignment        go to state 217
    channel           go to state 218
    delayed_input     go to state 219
    indef_type        go to state 34
    input             go to state 220
    output            go to state 221
    specifier         go to state 222
    variable          go to state 223
    variable_clist    go to state 224
    array_type        go to state 36
    comms_type        go to state 37
    element           go to state 225
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 229
    scalar            go to state 73


state 380

   82 sequence: SEQ replicator NEWLINE RIND . process ROUTD

    '['         shift, and go to state 182
    ALT         shift, and go to state 183
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CASE        shift, and go to state 185
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    IF          shift, and go to state 186
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PAR         shift, and go to state 187
    PLACE       shift, and go to state 188
    PLACED      shift, and go to state 189
    PORT        shift, and go to state 28
    PRI         shift, and go to state 190
    PROC        shift, and go to state 7
    PROCESSOR   shift, and go to state 191
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    SEQ         shift, and go to state 193
    SKIP        shift, and go to state 194
    STOP        shift, and go to state 195
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    WHILE       shift, and go to state 197

    alternation       go to state 198
    block_definition  go to state 199
    case_input        go to state 200
    conditional       go to state 201
    construction      go to state 202
    definition        go to state 203
    loop              go to state 204
    parallel          go to state 205
    placedpar         go to state 206
    process           go to state 445
    selection         go to state 209
    sequence          go to state 210
    specification     go to state 211
    abbreviation      go to state 212
    action            go to state 213
    allocation        go to state 214
    declaration       go to state 215
    instance          go to state 216
    assignment        go to state 217
    channel           go to state 218
    delayed_input     go to state 219
    indef_type        go to state 34
    input             go to state 220
    output            go to state 221
    specifier         go to state 222
    variable          go to state 223
    variable_clist    go to state 224
    array_type        go to state 36
    comms_type        go to state 37
    element           go to state 225
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 229
    scalar            go to state 73


state 381

   95 abbreviation: VAL specifier name IS . expression ':' NEWLINE

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 446
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 382

   43 definition: VAL specifier name RETYPES . expression ':' NEWLINE

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 447
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 383

   96 abbreviation: VAL name IS expression . ':' NEWLINE

    ':'  shift, and go to state 448


state 384

   48 loop: WHILE boolean NEWLINE RIND . process ROUTD

    '['         shift, and go to state 182
    ALT         shift, and go to state 183
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CASE        shift, and go to state 185
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    IF          shift, and go to state 186
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PAR         shift, and go to state 187
    PLACE       shift, and go to state 188
    PLACED      shift, and go to state 189
    PORT        shift, and go to state 28
    PRI         shift, and go to state 190
    PROC        shift, and go to state 7
    PROCESSOR   shift, and go to state 191
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    SEQ         shift, and go to state 193
    SKIP        shift, and go to state 194
    STOP        shift, and go to state 195
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    WHILE       shift, and go to state 197

    alternation       go to state 198
    block_definition  go to state 199
    case_input        go to state 200
    conditional       go to state 201
    construction      go to state 202
    definition        go to state 203
    loop              go to state 204
    parallel          go to state 205
    placedpar         go to state 206
    process           go to state 449
    selection         go to state 209
    sequence          go to state 210
    specification     go to state 211
    abbreviation      go to state 212
    action            go to state 213
    allocation        go to state 214
    declaration       go to state 215
    instance          go to state 216
    assignment        go to state 217
    channel           go to state 218
    delayed_input     go to state 219
    indef_type        go to state 34
    input             go to state 220
    output            go to state 221
    specifier         go to state 222
    variable          go to state 223
    variable_clist    go to state 224
    array_type        go to state 36
    comms_type        go to state 37
    element           go to state 225
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 229
    scalar            go to state 73


state 385

   19 block_definition: PROC name '(' formal_olist ')' NEWLINE RIND procedure_body ROUTD ':' NEWLINE .

    $default  reduce using rule 19 (block_definition)


state 386

  147 output_item_slist: output_item_slist ';' . output_item

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    output_item       go to state 450
    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 309
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 387

  145 output_item: expression DOUBLE_COLON . expression

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 451
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 388

  143 output: channel '!' scalar ';' . output_item_slist

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    output_item        go to state 307
    output_item_slist  go to state 452
    andor_expression   go to state 60
    comms_type         go to state 37
    conversion         go to state 61
    element            go to state 62
    expression         go to state 309
    operand            go to state 64
    primitive_type     go to state 65
    table              go to state 66
    byte               go to state 67
    counting_type      go to state 13
    data_type          go to state 40
    integer            go to state 68
    literal            go to state 69
    monadic_operator   go to state 70
    name               go to state 71
    real               go to state 72
    scalar             go to state 73
    string             go to state 74
    string_head        go to state 75


state 389

  170 element: element . '[' subscript ']'
  171        | '[' element . FROM subscript FOR subscript ']'

    '['   shift, and go to state 96
    FROM  shift, and go to state 147


state 390

  123 delayed_input: channel '?' AFTER expression .

    $default  reduce using rule 123 (delayed_input)


state 391

   21 case_input: channel '?' CASE NEWLINE . RIND variant_vlist ROUTD
   22           | channel '?' CASE NEWLINE .

    RIND  shift, and go to state 453

    $default  reduce using rule 22 (case_input)


state 392

  136 input: channel '?' CASE tagged_list .

    $default  reduce using rule 136 (input)


state 393

  155 tagged_list: scalar .
  156            | scalar . ';' input_item_slist

    ';'  shift, and go to state 454

    $default  reduce using rule 155 (tagged_list)


state 394

  141 input_item_slist: input_item_slist ';' . input_item

    '['         shift, and go to state 311
    IDENTIFIER  shift, and go to state 16

    input_item  go to state 455
    variable    go to state 316
    element     go to state 317
    name        go to state 318
    scalar      go to state 73


state 395

  139 input_item: variable DOUBLE_COLON . variable

    '['         shift, and go to state 311
    IDENTIFIER  shift, and go to state 16

    variable  go to state 456
    element   go to state 317
    name      go to state 318
    scalar    go to state 73


state 396

   93 abbreviation: specifier name IS element . ':' NEWLINE
  170 element: element . '[' subscript ']'

    ':'  shift, and go to state 457
    '['  shift, and go to state 96


state 397

   42 definition: specifier name RETYPES element . ':' NEWLINE
  170 element: element . '[' subscript ']'

    ':'  shift, and go to state 458
    '['  shift, and go to state 96


state 398

  124 expression_list: name '(' . expression_olist ')'
  188 operand: name '(' . expression_olist ')'

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    $default  reduce using rule 182 (expression_olist)

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 88
    expression_clist  go to state 163
    expression_olist  go to state 459
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 399

  101 declaration: type name_clist ':' NEWLINE .

    $default  reduce using rule 101 (declaration)


state 400

   20 block_definition: data_type_clist FUNCTION name '(' . formal_olist ')' NEWLINE RIND function_body ROUTD ':' NEWLINE
   41 definition: data_type_clist FUNCTION name '(' . formal_olist ')' IS expression_list ':' NEWLINE

    '['         shift, and go to state 25
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CHAN        shift, and go to state 26
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PORT        shift, and go to state 28
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 30

    $default  reduce using rule 130 (formal_olist)

    formal          go to state 31
    formal_clist    go to state 32
    formal_olist    go to state 460
    indef_type      go to state 34
    specifier       go to state 35
    array_type      go to state 36
    comms_type      go to state 37
    primitive_type  go to state 38
    type            go to state 39
    counting_type   go to state 13
    data_type       go to state 40


state 401

  113 actual_clist: actual_clist ',' . actual

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    actual            go to state 461
    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 330
    expression        go to state 331
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 402

  105 instance: name '(' actual_olist ')' . NEWLINE

    NEWLINE  shift, and go to state 462


state 403

   94 abbreviation: name IS element ':' . NEWLINE

    NEWLINE  shift, and go to state 463


state 404

   86 valof: VALOF NEWLINE RIND . process RESULT expression_list NEWLINE ROUTD

    '['         shift, and go to state 182
    ALT         shift, and go to state 183
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CASE        shift, and go to state 185
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    IF          shift, and go to state 186
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PAR         shift, and go to state 187
    PLACE       shift, and go to state 188
    PLACED      shift, and go to state 189
    PORT        shift, and go to state 28
    PRI         shift, and go to state 190
    PROC        shift, and go to state 7
    PROCESSOR   shift, and go to state 191
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    SEQ         shift, and go to state 193
    SKIP        shift, and go to state 194
    STOP        shift, and go to state 195
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    WHILE       shift, and go to state 197

    alternation       go to state 198
    block_definition  go to state 199
    case_input        go to state 200
    conditional       go to state 201
    construction      go to state 202
    definition        go to state 203
    loop              go to state 204
    parallel          go to state 205
    placedpar         go to state 206
    process           go to state 464
    selection         go to state 209
    sequence          go to state 210
    specification     go to state 211
    abbreviation      go to state 212
    action            go to state 213
    allocation        go to state 214
    declaration       go to state 215
    instance          go to state 216
    assignment        go to state 217
    channel           go to state 218
    delayed_input     go to state 219
    indef_type        go to state 34
    input             go to state 220
    output            go to state 221
    specifier         go to state 222
    variable          go to state 223
    variable_clist    go to state 224
    array_type        go to state 36
    comms_type        go to state 37
    element           go to state 225
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 229
    scalar            go to state 73


state 405

   20 block_definition: data_type_clist FUNCTION name '(' formal_olist ')' NEWLINE RIND function_body ROUTD ':' . NEWLINE

    NEWLINE  shift, and go to state 465


state 406

  134 indef_type: '[' expression . ']' indef_type
  162 array_type: '[' expression . ']' type
  180 expression_clist: expression .

    ']'  shift, and go to state 97

    ']'       [reduce using rule 180 (expression_clist)]
    $default  reduce using rule 180 (expression_clist)


state 407

    4 alternation: ALT NEWLINE RIND alternative_vlist ROUTD .

    $default  reduce using rule 4 (alternation)


state 408

   18 alternative_vlist: alternative_vlist alternative .

    $default  reduce using rule 18 (alternative_vlist)


state 409

   12 alternative: specification alternative .

    $default  reduce using rule 12 (alternative)


state 410

   46 guarded_alternative: guard RIND . process ROUTD

    '['         shift, and go to state 182
    ALT         shift, and go to state 183
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CASE        shift, and go to state 185
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    IF          shift, and go to state 186
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PAR         shift, and go to state 187
    PLACE       shift, and go to state 188
    PLACED      shift, and go to state 189
    PORT        shift, and go to state 28
    PRI         shift, and go to state 190
    PROC        shift, and go to state 7
    PROCESSOR   shift, and go to state 191
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    SEQ         shift, and go to state 193
    SKIP        shift, and go to state 194
    STOP        shift, and go to state 195
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    WHILE       shift, and go to state 197

    alternation       go to state 198
    block_definition  go to state 199
    case_input        go to state 200
    conditional       go to state 201
    construction      go to state 202
    definition        go to state 203
    loop              go to state 204
    parallel          go to state 205
    placedpar         go to state 206
    process           go to state 466
    selection         go to state 209
    sequence          go to state 210
    specification     go to state 211
    abbreviation      go to state 212
    action            go to state 213
    allocation        go to state 214
    declaration       go to state 215
    instance          go to state 216
    assignment        go to state 217
    channel           go to state 218
    delayed_input     go to state 219
    indef_type        go to state 34
    input             go to state 220
    output            go to state 221
    specifier         go to state 222
    variable          go to state 223
    variable_clist    go to state 224
    array_type        go to state 36
    comms_type        go to state 37
    element           go to state 225
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 229
    scalar            go to state 73


state 411

   15 alternative: boolean '&' . channel '?' CASE NEWLINE RIND variant_vlist ROUTD
   16            | boolean '&' . channel '?' CASE NEWLINE
  103 guard: boolean '&' . input NEWLINE
  104      | boolean '&' . SKIP NEWLINE

    '['         shift, and go to state 311
    IDENTIFIER  shift, and go to state 16
    SKIP        shift, and go to state 467

    channel        go to state 468
    delayed_input  go to state 219
    input          go to state 469
    element        go to state 470
    name           go to state 318
    scalar         go to state 73


state 412

   13 alternative: channel '?' . CASE NEWLINE RIND variant_vlist ROUTD
   14            | channel '?' . CASE NEWLINE
  123 delayed_input: channel '?' . AFTER expression
  135 input: channel '?' . input_item_slist
  136      | channel '?' . CASE tagged_list

    '['         shift, and go to state 311
    AFTER       shift, and go to state 312
    CASE        shift, and go to state 471
    IDENTIFIER  shift, and go to state 16

    input_item        go to state 314
    input_item_slist  go to state 315
    variable          go to state 316
    element           go to state 317
    name              go to state 318
    scalar            go to state 73


state 413

  102 guard: input NEWLINE .

    $default  reduce using rule 102 (guard)


state 414

    6 alternation: ALT replicator NEWLINE RIND alternative . ROUTD

    ROUTD  shift, and go to state 472


state 415

  148 replicator: name '=' base FOR . count

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    count             go to state 473
    element           go to state 62
    expression        go to state 281
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 416

   40 definition: ANY FUNCTION name '(' ')' . NEWLINE RIND function_body ROUTD ':' NEWLINE

    NEWLINE  shift, and go to state 474


state 417

   50 option: ELSE . NEWLINE RIND process ROUTD

    NEWLINE  shift, and go to state 475


state 418

   52 option_vlist: option .

    $default  reduce using rule 52 (option_vlist)


state 419

   53 option_vlist: option_vlist . option
   78 selection: CASE selector NEWLINE RIND option_vlist . ROUTD

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 338
    '~'                   shift, and go to state 45
    ANY                   shift, and go to state 184
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    ELSE                  shift, and go to state 417
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INDEF_SPEC            shift, and go to state 27
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    PROC                  shift, and go to state 7
    PROTOCOL              shift, and go to state 192
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    ROUTD                 shift, and go to state 476
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59
    VAL                   shift, and go to state 196

    block_definition       go to state 199
    definition             go to state 203
    option                 go to state 477
    specification          go to state 420
    abbreviation           go to state 212
    declaration            go to state 215
    case_expression        go to state 421
    case_expression_clist  go to state 422
    indef_type             go to state 34
    specifier              go to state 222
    andor_expression       go to state 60
    array_type             go to state 36
    comms_type             go to state 37
    conversion             go to state 61
    element                go to state 62
    expression             go to state 423
    operand                go to state 64
    primitive_type         go to state 350
    table                  go to state 66
    type                   go to state 226
    byte                   go to state 67
    counting_type          go to state 13
    data_type              go to state 227
    data_type_clist        go to state 228
    integer                go to state 68
    literal                go to state 69
    monadic_operator       go to state 70
    name                   go to state 351
    real                   go to state 72
    scalar                 go to state 73
    string                 go to state 74
    string_head            go to state 75


state 420

   51 option: specification . option

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 338
    '~'                   shift, and go to state 45
    ANY                   shift, and go to state 184
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    ELSE                  shift, and go to state 417
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INDEF_SPEC            shift, and go to state 27
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    PROC                  shift, and go to state 7
    PROTOCOL              shift, and go to state 192
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59
    VAL                   shift, and go to state 196

    block_definition       go to state 199
    definition             go to state 203
    option                 go to state 478
    specification          go to state 420
    abbreviation           go to state 212
    declaration            go to state 215
    case_expression        go to state 421
    case_expression_clist  go to state 422
    indef_type             go to state 34
    specifier              go to state 222
    andor_expression       go to state 60
    array_type             go to state 36
    comms_type             go to state 37
    conversion             go to state 61
    element                go to state 62
    expression             go to state 423
    operand                go to state 64
    primitive_type         go to state 350
    table                  go to state 66
    type                   go to state 226
    byte                   go to state 67
    counting_type          go to state 13
    data_type              go to state 227
    data_type_clist        go to state 228
    integer                go to state 68
    literal                go to state 69
    monadic_operator       go to state 70
    name                   go to state 351
    real                   go to state 72
    scalar                 go to state 73
    string                 go to state 74
    string_head            go to state 75


state 421

  120 case_expression_clist: case_expression .

    $default  reduce using rule 120 (case_expression_clist)


state 422

   49 option: case_expression_clist . NEWLINE RIND process ROUTD
  121 case_expression_clist: case_expression_clist . ',' case_expression

    ','      shift, and go to state 479
    NEWLINE  shift, and go to state 480


state 423

  119 case_expression: expression .

    $default  reduce using rule 119 (case_expression)


state 424

   28 conditional: IF NEWLINE RIND choice_vlist ROUTD .

    $default  reduce using rule 28 (conditional)


state 425

   27 choice_vlist: choice_vlist choice .

    $default  reduce using rule 27 (choice_vlist)


state 426

   25 choice: specification choice .

    $default  reduce using rule 25 (choice)


state 427

   47 guarded_choice: boolean NEWLINE . RIND process ROUTD

    RIND  shift, and go to state 481


state 428

   30 conditional: IF replicator NEWLINE RIND choice . ROUTD

    ROUTD  shift, and go to state 482


state 429

   54 parallel: PAR NEWLINE RIND process_vlist ROUTD .

    $default  reduce using rule 54 (parallel)


state 430

   77 process_vlist: process_vlist process .

    $default  reduce using rule 77 (process_vlist)


state 431

   56 parallel: PAR replicator NEWLINE RIND process . ROUTD

    ROUTD  shift, and go to state 483


state 432

  100 allocation: PLACE name AT expression ':' . NEWLINE

    NEWLINE  shift, and go to state 484


state 433

   65 placedpar_vlist: placedpar .

    $default  reduce using rule 65 (placedpar_vlist)


state 434

   61 placedpar: PLACED PAR NEWLINE RIND placedpar_vlist . ROUTD
   66 placedpar_vlist: placedpar_vlist . placedpar

    PLACED     shift, and go to state 189
    PROCESSOR  shift, and go to state 191
    ROUTD      shift, and go to state 485

    placedpar  go to state 486


state 435

   63 placedpar: PLACED PAR replicator NEWLINE RIND . placedpar ROUTD

    PLACED     shift, and go to state 189
    PROCESSOR  shift, and go to state 191

    placedpar  go to state 487


state 436

    7 alternation: PRI ALT NEWLINE RIND alternative_vlist . ROUTD
   18 alternative_vlist: alternative_vlist . alternative

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 338
    '~'                   shift, and go to state 45
    ALT                   shift, and go to state 183
    ANY                   shift, and go to state 184
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INDEF_SPEC            shift, and go to state 27
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    PRI                   shift, and go to state 339
    PROC                  shift, and go to state 7
    PROTOCOL              shift, and go to state 192
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    ROUTD                 shift, and go to state 488
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59
    VAL                   shift, and go to state 196

    alternation          go to state 340
    alternative          go to state 408
    block_definition     go to state 199
    definition           go to state 203
    guarded_alternative  go to state 343
    specification        go to state 344
    abbreviation         go to state 212
    declaration          go to state 215
    guard                go to state 345
    boolean              go to state 346
    channel              go to state 347
    delayed_input        go to state 219
    indef_type           go to state 34
    input                go to state 348
    specifier            go to state 222
    andor_expression     go to state 60
    array_type           go to state 36
    comms_type           go to state 37
    conversion           go to state 61
    element              go to state 349
    expression           go to state 257
    operand              go to state 64
    primitive_type       go to state 350
    table                go to state 66
    type                 go to state 226
    byte                 go to state 67
    counting_type        go to state 13
    data_type            go to state 227
    data_type_clist      go to state 228
    integer              go to state 68
    literal              go to state 69
    monadic_operator     go to state 70
    name                 go to state 351
    real                 go to state 72
    scalar               go to state 73
    string               go to state 74
    string_head          go to state 75


state 437

    9 alternation: PRI ALT replicator NEWLINE RIND . alternative ROUTD

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 338
    '~'                   shift, and go to state 45
    ALT                   shift, and go to state 183
    ANY                   shift, and go to state 184
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INDEF_SPEC            shift, and go to state 27
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    PRI                   shift, and go to state 339
    PROC                  shift, and go to state 7
    PROTOCOL              shift, and go to state 192
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59
    VAL                   shift, and go to state 196

    alternation          go to state 340
    alternative          go to state 489
    block_definition     go to state 199
    definition           go to state 203
    guarded_alternative  go to state 343
    specification        go to state 344
    abbreviation         go to state 212
    declaration          go to state 215
    guard                go to state 345
    boolean              go to state 346
    channel              go to state 347
    delayed_input        go to state 219
    indef_type           go to state 34
    input                go to state 348
    specifier            go to state 222
    andor_expression     go to state 60
    array_type           go to state 36
    comms_type           go to state 37
    conversion           go to state 61
    element              go to state 349
    expression           go to state 257
    operand              go to state 64
    primitive_type       go to state 350
    table                go to state 66
    type                 go to state 226
    byte                 go to state 67
    counting_type        go to state 13
    data_type            go to state 227
    data_type_clist      go to state 228
    integer              go to state 68
    literal              go to state 69
    monadic_operator     go to state 70
    name                 go to state 351
    real                 go to state 72
    scalar               go to state 73
    string               go to state 74
    string_head          go to state 75


state 438

   57 parallel: PRI PAR NEWLINE RIND process_vlist . ROUTD
   77 process_vlist: process_vlist . process

    '['         shift, and go to state 182
    ALT         shift, and go to state 183
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CASE        shift, and go to state 185
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    IF          shift, and go to state 186
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PAR         shift, and go to state 187
    PLACE       shift, and go to state 188
    PLACED      shift, and go to state 189
    PORT        shift, and go to state 28
    PRI         shift, and go to state 190
    PROC        shift, and go to state 7
    PROCESSOR   shift, and go to state 191
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    ROUTD       shift, and go to state 490
    SEQ         shift, and go to state 193
    SKIP        shift, and go to state 194
    STOP        shift, and go to state 195
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    WHILE       shift, and go to state 197

    alternation       go to state 198
    block_definition  go to state 199
    case_input        go to state 200
    conditional       go to state 201
    construction      go to state 202
    definition        go to state 203
    loop              go to state 204
    parallel          go to state 205
    placedpar         go to state 206
    process           go to state 430
    selection         go to state 209
    sequence          go to state 210
    specification     go to state 211
    abbreviation      go to state 212
    action            go to state 213
    allocation        go to state 214
    declaration       go to state 215
    instance          go to state 216
    assignment        go to state 217
    channel           go to state 218
    delayed_input     go to state 219
    indef_type        go to state 34
    input             go to state 220
    output            go to state 221
    specifier         go to state 222
    variable          go to state 223
    variable_clist    go to state 224
    array_type        go to state 36
    comms_type        go to state 37
    element           go to state 225
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 229
    scalar            go to state 73


state 439

   59 parallel: PRI PAR replicator NEWLINE RIND . process ROUTD

    '['         shift, and go to state 182
    ALT         shift, and go to state 183
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CASE        shift, and go to state 185
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    IF          shift, and go to state 186
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PAR         shift, and go to state 187
    PLACE       shift, and go to state 188
    PLACED      shift, and go to state 189
    PORT        shift, and go to state 28
    PRI         shift, and go to state 190
    PROC        shift, and go to state 7
    PROCESSOR   shift, and go to state 191
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    SEQ         shift, and go to state 193
    SKIP        shift, and go to state 194
    STOP        shift, and go to state 195
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    WHILE       shift, and go to state 197

    alternation       go to state 198
    block_definition  go to state 199
    case_input        go to state 200
    conditional       go to state 201
    construction      go to state 202
    definition        go to state 203
    loop              go to state 204
    parallel          go to state 205
    placedpar         go to state 206
    process           go to state 491
    selection         go to state 209
    sequence          go to state 210
    specification     go to state 211
    abbreviation      go to state 212
    action            go to state 213
    allocation        go to state 214
    declaration       go to state 215
    instance          go to state 216
    assignment        go to state 217
    channel           go to state 218
    delayed_input     go to state 219
    indef_type        go to state 34
    input             go to state 220
    output            go to state 221
    specifier         go to state 222
    variable          go to state 223
    variable_clist    go to state 224
    array_type        go to state 36
    comms_type        go to state 37
    element           go to state 225
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 229
    scalar            go to state 73


state 440

   64 placedpar: PROCESSOR expression NEWLINE RIND process . ROUTD

    ROUTD  shift, and go to state 492


state 441

   37 definition: PROTOCOL name IS sequential_protocol ':' . NEWLINE

    NEWLINE  shift, and go to state 493


state 442

  152 simple_protocol_slist: simple_protocol_slist ';' . simple_protocol

    '['     shift, and go to state 133
    BOOL    shift, and go to state 1
    BYTE    shift, and go to state 2
    CHAN    shift, and go to state 26
    INT     shift, and go to state 3
    INT16   shift, and go to state 4
    INT32   shift, and go to state 5
    INT64   shift, and go to state 6
    PORT    shift, and go to state 28
    REAL32  shift, and go to state 8
    REAL64  shift, and go to state 9
    TIMER   shift, and go to state 29

    array_type       go to state 36
    comms_type       go to state 37
    primitive_type   go to state 38
    simple_protocol  go to state 494
    type             go to state 137
    counting_type    go to state 138
    data_type        go to state 40


state 443

   38 definition: PROTOCOL name NEWLINE RIND CASE . NEWLINE RIND tagged_protocol_vlist ROUTD ROUTD ':' NEWLINE
   39           | PROTOCOL name NEWLINE RIND CASE . NEWLINE ROUTD ':' NEWLINE

    NEWLINE  shift, and go to state 495


state 444

   80 sequence: SEQ NEWLINE RIND process_vlist ROUTD .

    $default  reduce using rule 80 (sequence)


state 445

   82 sequence: SEQ replicator NEWLINE RIND process . ROUTD

    ROUTD  shift, and go to state 496


state 446

   95 abbreviation: VAL specifier name IS expression . ':' NEWLINE

    ':'  shift, and go to state 497


state 447

   43 definition: VAL specifier name RETYPES expression . ':' NEWLINE

    ':'  shift, and go to state 498


state 448

   96 abbreviation: VAL name IS expression ':' . NEWLINE

    NEWLINE  shift, and go to state 499


state 449

   48 loop: WHILE boolean NEWLINE RIND process . ROUTD

    ROUTD  shift, and go to state 500


state 450

  147 output_item_slist: output_item_slist ';' output_item .

    $default  reduce using rule 147 (output_item_slist)


state 451

  145 output_item: expression DOUBLE_COLON expression .

    $default  reduce using rule 145 (output_item)


state 452

  143 output: channel '!' scalar ';' output_item_slist .
  147 output_item_slist: output_item_slist . ';' output_item

    ';'  shift, and go to state 386

    $default  reduce using rule 143 (output)


state 453

   21 case_input: channel '?' CASE NEWLINE RIND . variant_vlist ROUTD

    '['         shift, and go to state 25
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PORT        shift, and go to state 28
    PROC        shift, and go to state 7
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196

    block_definition  go to state 199
    definition        go to state 203
    specification     go to state 501
    variant           go to state 502
    variant_vlist     go to state 503
    abbreviation      go to state 212
    declaration       go to state 215
    indef_type        go to state 34
    specifier         go to state 222
    tagged_list       go to state 504
    array_type        go to state 36
    comms_type        go to state 37
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 505
    scalar            go to state 393


state 454

  156 tagged_list: scalar ';' . input_item_slist

    '['         shift, and go to state 311
    IDENTIFIER  shift, and go to state 16

    input_item        go to state 314
    input_item_slist  go to state 506
    variable          go to state 316
    element           go to state 317
    name              go to state 318
    scalar            go to state 73


state 455

  141 input_item_slist: input_item_slist ';' input_item .

    $default  reduce using rule 141 (input_item_slist)


state 456

  139 input_item: variable DOUBLE_COLON variable .

    $default  reduce using rule 139 (input_item)


state 457

   93 abbreviation: specifier name IS element ':' . NEWLINE

    NEWLINE  shift, and go to state 507


state 458

   42 definition: specifier name RETYPES element ':' . NEWLINE

    NEWLINE  shift, and go to state 508


state 459

  124 expression_list: name '(' expression_olist . ')'
  188 operand: name '(' expression_olist . ')'

    ')'  shift, and go to state 509


state 460

   20 block_definition: data_type_clist FUNCTION name '(' formal_olist . ')' NEWLINE RIND function_body ROUTD ':' NEWLINE
   41 definition: data_type_clist FUNCTION name '(' formal_olist . ')' IS expression_list ':' NEWLINE

    ')'  shift, and go to state 510


state 461

  113 actual_clist: actual_clist ',' actual .

    $default  reduce using rule 113 (actual_clist)


state 462

  105 instance: name '(' actual_olist ')' NEWLINE .

    $default  reduce using rule 105 (instance)


state 463

   94 abbreviation: name IS element ':' NEWLINE .

    $default  reduce using rule 94 (abbreviation)


state 464

   86 valof: VALOF NEWLINE RIND process . RESULT expression_list NEWLINE ROUTD

    RESULT  shift, and go to state 511


state 465

   20 block_definition: data_type_clist FUNCTION name '(' formal_olist ')' NEWLINE RIND function_body ROUTD ':' NEWLINE .

    $default  reduce using rule 20 (block_definition)


state 466

   46 guarded_alternative: guard RIND process . ROUTD

    ROUTD  shift, and go to state 512


state 467

  104 guard: boolean '&' SKIP . NEWLINE

    NEWLINE  shift, and go to state 513


state 468

   15 alternative: boolean '&' channel . '?' CASE NEWLINE RIND variant_vlist ROUTD
   16            | boolean '&' channel . '?' CASE NEWLINE
  123 delayed_input: channel . '?' AFTER expression
  135 input: channel . '?' input_item_slist
  136      | channel . '?' CASE tagged_list

    '?'  shift, and go to state 514


state 469

  103 guard: boolean '&' input . NEWLINE

    NEWLINE  shift, and go to state 515


state 470

  122 channel: element .
  170 element: element . '[' subscript ']'

    '['  shift, and go to state 96

    $default  reduce using rule 122 (channel)


state 471

   13 alternative: channel '?' CASE . NEWLINE RIND variant_vlist ROUTD
   14            | channel '?' CASE . NEWLINE
  136 input: channel '?' CASE . tagged_list

    IDENTIFIER  shift, and go to state 16
    NEWLINE     shift, and go to state 516

    tagged_list  go to state 392
    name         go to state 318
    scalar       go to state 393


state 472

    6 alternation: ALT replicator NEWLINE RIND alternative ROUTD .

    $default  reduce using rule 6 (alternation)


state 473

  148 replicator: name '=' base FOR count .

    $default  reduce using rule 148 (replicator)


state 474

   40 definition: ANY FUNCTION name '(' ')' NEWLINE . RIND function_body ROUTD ':' NEWLINE

    RIND  shift, and go to state 517


state 475

   50 option: ELSE NEWLINE . RIND process ROUTD

    RIND  shift, and go to state 518


state 476

   78 selection: CASE selector NEWLINE RIND option_vlist ROUTD .

    $default  reduce using rule 78 (selection)


state 477

   53 option_vlist: option_vlist option .

    $default  reduce using rule 53 (option_vlist)


state 478

   51 option: specification option .

    $default  reduce using rule 51 (option)


state 479

  121 case_expression_clist: case_expression_clist ',' . case_expression

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    case_expression   go to state 519
    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 423
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 71
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 480

   49 option: case_expression_clist NEWLINE . RIND process ROUTD

    RIND  shift, and go to state 520


state 481

   47 guarded_choice: boolean NEWLINE RIND . process ROUTD

    '['         shift, and go to state 182
    ALT         shift, and go to state 183
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CASE        shift, and go to state 185
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    IF          shift, and go to state 186
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PAR         shift, and go to state 187
    PLACE       shift, and go to state 188
    PLACED      shift, and go to state 189
    PORT        shift, and go to state 28
    PRI         shift, and go to state 190
    PROC        shift, and go to state 7
    PROCESSOR   shift, and go to state 191
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    SEQ         shift, and go to state 193
    SKIP        shift, and go to state 194
    STOP        shift, and go to state 195
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    WHILE       shift, and go to state 197

    alternation       go to state 198
    block_definition  go to state 199
    case_input        go to state 200
    conditional       go to state 201
    construction      go to state 202
    definition        go to state 203
    loop              go to state 204
    parallel          go to state 205
    placedpar         go to state 206
    process           go to state 521
    selection         go to state 209
    sequence          go to state 210
    specification     go to state 211
    abbreviation      go to state 212
    action            go to state 213
    allocation        go to state 214
    declaration       go to state 215
    instance          go to state 216
    assignment        go to state 217
    channel           go to state 218
    delayed_input     go to state 219
    indef_type        go to state 34
    input             go to state 220
    output            go to state 221
    specifier         go to state 222
    variable          go to state 223
    variable_clist    go to state 224
    array_type        go to state 36
    comms_type        go to state 37
    element           go to state 225
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 229
    scalar            go to state 73


state 482

   30 conditional: IF replicator NEWLINE RIND choice ROUTD .

    $default  reduce using rule 30 (conditional)


state 483

   56 parallel: PAR replicator NEWLINE RIND process ROUTD .

    $default  reduce using rule 56 (parallel)


state 484

  100 allocation: PLACE name AT expression ':' NEWLINE .

    $default  reduce using rule 100 (allocation)


state 485

   61 placedpar: PLACED PAR NEWLINE RIND placedpar_vlist ROUTD .

    $default  reduce using rule 61 (placedpar)


state 486

   66 placedpar_vlist: placedpar_vlist placedpar .

    $default  reduce using rule 66 (placedpar_vlist)


state 487

   63 placedpar: PLACED PAR replicator NEWLINE RIND placedpar . ROUTD

    ROUTD  shift, and go to state 522


state 488

    7 alternation: PRI ALT NEWLINE RIND alternative_vlist ROUTD .

    $default  reduce using rule 7 (alternation)


state 489

    9 alternation: PRI ALT replicator NEWLINE RIND alternative . ROUTD

    ROUTD  shift, and go to state 523


state 490

   57 parallel: PRI PAR NEWLINE RIND process_vlist ROUTD .

    $default  reduce using rule 57 (parallel)


state 491

   59 parallel: PRI PAR replicator NEWLINE RIND process . ROUTD

    ROUTD  shift, and go to state 524


state 492

   64 placedpar: PROCESSOR expression NEWLINE RIND process ROUTD .

    $default  reduce using rule 64 (placedpar)


state 493

   37 definition: PROTOCOL name IS sequential_protocol ':' NEWLINE .

    $default  reduce using rule 37 (definition)


state 494

  152 simple_protocol_slist: simple_protocol_slist ';' simple_protocol .

    $default  reduce using rule 152 (simple_protocol_slist)


state 495

   38 definition: PROTOCOL name NEWLINE RIND CASE NEWLINE . RIND tagged_protocol_vlist ROUTD ROUTD ':' NEWLINE
   39           | PROTOCOL name NEWLINE RIND CASE NEWLINE . ROUTD ':' NEWLINE

    RIND   shift, and go to state 525
    ROUTD  shift, and go to state 526


state 496

   82 sequence: SEQ replicator NEWLINE RIND process ROUTD .

    $default  reduce using rule 82 (sequence)


state 497

   95 abbreviation: VAL specifier name IS expression ':' . NEWLINE

    NEWLINE  shift, and go to state 527


state 498

   43 definition: VAL specifier name RETYPES expression ':' . NEWLINE

    NEWLINE  shift, and go to state 528


state 499

   96 abbreviation: VAL name IS expression ':' NEWLINE .

    $default  reduce using rule 96 (abbreviation)


state 500

   48 loop: WHILE boolean NEWLINE RIND process ROUTD .

    $default  reduce using rule 48 (loop)


state 501

   90 variant: specification . variant

    '['         shift, and go to state 25
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PORT        shift, and go to state 28
    PROC        shift, and go to state 7
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196

    block_definition  go to state 199
    definition        go to state 203
    specification     go to state 501
    variant           go to state 529
    abbreviation      go to state 212
    declaration       go to state 215
    indef_type        go to state 34
    specifier         go to state 222
    tagged_list       go to state 504
    array_type        go to state 36
    comms_type        go to state 37
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 505
    scalar            go to state 393


state 502

   91 variant_vlist: variant .

    $default  reduce using rule 91 (variant_vlist)


state 503

   21 case_input: channel '?' CASE NEWLINE RIND variant_vlist . ROUTD
   92 variant_vlist: variant_vlist . variant

    '['         shift, and go to state 25
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PORT        shift, and go to state 28
    PROC        shift, and go to state 7
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    ROUTD       shift, and go to state 530
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196

    block_definition  go to state 199
    definition        go to state 203
    specification     go to state 501
    variant           go to state 531
    abbreviation      go to state 212
    declaration       go to state 215
    indef_type        go to state 34
    specifier         go to state 222
    tagged_list       go to state 504
    array_type        go to state 36
    comms_type        go to state 37
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 505
    scalar            go to state 393


state 504

   89 variant: tagged_list . NEWLINE RIND process ROUTD

    NEWLINE  shift, and go to state 532


state 505

   94 abbreviation: name . IS element ':' NEWLINE
  258 scalar: name .

    IS  shift, and go to state 272

    $default  reduce using rule 258 (scalar)


state 506

  141 input_item_slist: input_item_slist . ';' input_item
  156 tagged_list: scalar ';' input_item_slist .

    ';'  shift, and go to state 394

    $default  reduce using rule 156 (tagged_list)


state 507

   93 abbreviation: specifier name IS element ':' NEWLINE .

    $default  reduce using rule 93 (abbreviation)


state 508

   42 definition: specifier name RETYPES element ':' NEWLINE .

    $default  reduce using rule 42 (definition)


state 509

  124 expression_list: name '(' expression_olist ')' .
  188 operand: name '(' expression_olist ')' .

    ':'       reduce using rule 124 (expression_list)
    ':'       [reduce using rule 188 (operand)]
    NEWLINE   reduce using rule 124 (expression_list)
    NEWLINE   [reduce using rule 188 (operand)]
    $default  reduce using rule 188 (operand)


state 510

   20 block_definition: data_type_clist FUNCTION name '(' formal_olist ')' . NEWLINE RIND function_body ROUTD ':' NEWLINE
   41 definition: data_type_clist FUNCTION name '(' formal_olist ')' . IS expression_list ':' NEWLINE

    IS       shift, and go to state 533
    NEWLINE  shift, and go to state 170


state 511

   86 valof: VALOF NEWLINE RIND process RESULT . expression_list NEWLINE ROUTD

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    expression_list   go to state 534
    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 88
    expression_clist  go to state 323
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 324
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 512

   46 guarded_alternative: guard RIND process ROUTD .

    $default  reduce using rule 46 (guarded_alternative)


state 513

  104 guard: boolean '&' SKIP NEWLINE .

    $default  reduce using rule 104 (guard)


state 514

   15 alternative: boolean '&' channel '?' . CASE NEWLINE RIND variant_vlist ROUTD
   16            | boolean '&' channel '?' . CASE NEWLINE
  123 delayed_input: channel '?' . AFTER expression
  135 input: channel '?' . input_item_slist
  136      | channel '?' . CASE tagged_list

    '['         shift, and go to state 311
    AFTER       shift, and go to state 312
    CASE        shift, and go to state 535
    IDENTIFIER  shift, and go to state 16

    input_item        go to state 314
    input_item_slist  go to state 315
    variable          go to state 316
    element           go to state 317
    name              go to state 318
    scalar            go to state 73


state 515

  103 guard: boolean '&' input NEWLINE .

    $default  reduce using rule 103 (guard)


state 516

   13 alternative: channel '?' CASE NEWLINE . RIND variant_vlist ROUTD
   14            | channel '?' CASE NEWLINE .

    RIND  shift, and go to state 536

    $default  reduce using rule 14 (alternative)


state 517

   40 definition: ANY FUNCTION name '(' ')' NEWLINE RIND . function_body ROUTD ':' NEWLINE

    '['         shift, and go to state 25
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PORT        shift, and go to state 28
    PROC        shift, and go to state 7
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    VALOF       shift, and go to state 273

    block_definition  go to state 199
    definition        go to state 203
    function_body     go to state 537
    specification     go to state 275
    valof             go to state 276
    value_process     go to state 277
    abbreviation      go to state 212
    declaration       go to state 215
    indef_type        go to state 34
    specifier         go to state 222
    array_type        go to state 36
    comms_type        go to state 37
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 278


state 518

   50 option: ELSE NEWLINE RIND . process ROUTD

    '['         shift, and go to state 182
    ALT         shift, and go to state 183
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CASE        shift, and go to state 185
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    IF          shift, and go to state 186
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PAR         shift, and go to state 187
    PLACE       shift, and go to state 188
    PLACED      shift, and go to state 189
    PORT        shift, and go to state 28
    PRI         shift, and go to state 190
    PROC        shift, and go to state 7
    PROCESSOR   shift, and go to state 191
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    SEQ         shift, and go to state 193
    SKIP        shift, and go to state 194
    STOP        shift, and go to state 195
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    WHILE       shift, and go to state 197

    alternation       go to state 198
    block_definition  go to state 199
    case_input        go to state 200
    conditional       go to state 201
    construction      go to state 202
    definition        go to state 203
    loop              go to state 204
    parallel          go to state 205
    placedpar         go to state 206
    process           go to state 538
    selection         go to state 209
    sequence          go to state 210
    specification     go to state 211
    abbreviation      go to state 212
    action            go to state 213
    allocation        go to state 214
    declaration       go to state 215
    instance          go to state 216
    assignment        go to state 217
    channel           go to state 218
    delayed_input     go to state 219
    indef_type        go to state 34
    input             go to state 220
    output            go to state 221
    specifier         go to state 222
    variable          go to state 223
    variable_clist    go to state 224
    array_type        go to state 36
    comms_type        go to state 37
    element           go to state 225
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 229
    scalar            go to state 73


state 519

  121 case_expression_clist: case_expression_clist ',' case_expression .

    $default  reduce using rule 121 (case_expression_clist)


state 520

   49 option: case_expression_clist NEWLINE RIND . process ROUTD

    '['         shift, and go to state 182
    ALT         shift, and go to state 183
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CASE        shift, and go to state 185
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    IF          shift, and go to state 186
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PAR         shift, and go to state 187
    PLACE       shift, and go to state 188
    PLACED      shift, and go to state 189
    PORT        shift, and go to state 28
    PRI         shift, and go to state 190
    PROC        shift, and go to state 7
    PROCESSOR   shift, and go to state 191
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    SEQ         shift, and go to state 193
    SKIP        shift, and go to state 194
    STOP        shift, and go to state 195
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    WHILE       shift, and go to state 197

    alternation       go to state 198
    block_definition  go to state 199
    case_input        go to state 200
    conditional       go to state 201
    construction      go to state 202
    definition        go to state 203
    loop              go to state 204
    parallel          go to state 205
    placedpar         go to state 206
    process           go to state 539
    selection         go to state 209
    sequence          go to state 210
    specification     go to state 211
    abbreviation      go to state 212
    action            go to state 213
    allocation        go to state 214
    declaration       go to state 215
    instance          go to state 216
    assignment        go to state 217
    channel           go to state 218
    delayed_input     go to state 219
    indef_type        go to state 34
    input             go to state 220
    output            go to state 221
    specifier         go to state 222
    variable          go to state 223
    variable_clist    go to state 224
    array_type        go to state 36
    comms_type        go to state 37
    element           go to state 225
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 229
    scalar            go to state 73


state 521

   47 guarded_choice: boolean NEWLINE RIND process . ROUTD

    ROUTD  shift, and go to state 540


state 522

   63 placedpar: PLACED PAR replicator NEWLINE RIND placedpar ROUTD .

    $default  reduce using rule 63 (placedpar)


state 523

    9 alternation: PRI ALT replicator NEWLINE RIND alternative ROUTD .

    $default  reduce using rule 9 (alternation)


state 524

   59 parallel: PRI PAR replicator NEWLINE RIND process ROUTD .

    $default  reduce using rule 59 (parallel)


state 525

   38 definition: PROTOCOL name NEWLINE RIND CASE NEWLINE RIND . tagged_protocol_vlist ROUTD ROUTD ':' NEWLINE

    IDENTIFIER  shift, and go to state 16

    tagged_protocol        go to state 541
    tagged_protocol_vlist  go to state 542
    name                   go to state 318
    scalar                 go to state 543


state 526

   39 definition: PROTOCOL name NEWLINE RIND CASE NEWLINE ROUTD . ':' NEWLINE

    ':'  shift, and go to state 544


state 527

   95 abbreviation: VAL specifier name IS expression ':' NEWLINE .

    $default  reduce using rule 95 (abbreviation)


state 528

   43 definition: VAL specifier name RETYPES expression ':' NEWLINE .

    $default  reduce using rule 43 (definition)


state 529

   90 variant: specification variant .

    $default  reduce using rule 90 (variant)


state 530

   21 case_input: channel '?' CASE NEWLINE RIND variant_vlist ROUTD .

    $default  reduce using rule 21 (case_input)


state 531

   92 variant_vlist: variant_vlist variant .

    $default  reduce using rule 92 (variant_vlist)


state 532

   89 variant: tagged_list NEWLINE . RIND process ROUTD

    RIND  shift, and go to state 545


state 533

   41 definition: data_type_clist FUNCTION name '(' formal_olist ')' IS . expression_list ':' NEWLINE

    '('                   shift, and go to state 42
    '-'                   shift, and go to state 43
    '['                   shift, and go to state 44
    '~'                   shift, and go to state 45
    BITNOT                shift, and go to state 46
    BOOL                  shift, and go to state 1
    BYTE                  shift, and go to state 2
    BYTE_CONSTANT         shift, and go to state 47
    CHAN                  shift, and go to state 26
    FALSE                 shift, and go to state 48
    HEX_CONSTANT          shift, and go to state 49
    IDENTIFIER            shift, and go to state 16
    INT                   shift, and go to state 3
    INT16                 shift, and go to state 4
    INT32                 shift, and go to state 5
    INT64                 shift, and go to state 6
    INT_CONSTANT          shift, and go to state 50
    MINUS                 shift, and go to state 51
    MOSTNEG               shift, and go to state 52
    MOSTPOS               shift, and go to state 53
    NOT                   shift, and go to state 54
    PORT                  shift, and go to state 28
    REAL32                shift, and go to state 8
    REAL64                shift, and go to state 9
    REAL_CONSTANT         shift, and go to state 55
    SIZE                  shift, and go to state 56
    STRING_LITERAL        shift, and go to state 57
    STRING_LITERAL_START  shift, and go to state 58
    TIMER                 shift, and go to state 29
    TRUE                  shift, and go to state 59

    expression_list   go to state 546
    andor_expression  go to state 60
    comms_type        go to state 37
    conversion        go to state 61
    element           go to state 62
    expression        go to state 88
    expression_clist  go to state 323
    operand           go to state 64
    primitive_type    go to state 65
    table             go to state 66
    byte              go to state 67
    counting_type     go to state 13
    data_type         go to state 40
    integer           go to state 68
    literal           go to state 69
    monadic_operator  go to state 70
    name              go to state 324
    real              go to state 72
    scalar            go to state 73
    string            go to state 74
    string_head       go to state 75


state 534

   86 valof: VALOF NEWLINE RIND process RESULT expression_list . NEWLINE ROUTD

    NEWLINE  shift, and go to state 547


state 535

   15 alternative: boolean '&' channel '?' CASE . NEWLINE RIND variant_vlist ROUTD
   16            | boolean '&' channel '?' CASE . NEWLINE
  136 input: channel '?' CASE . tagged_list

    IDENTIFIER  shift, and go to state 16
    NEWLINE     shift, and go to state 548

    tagged_list  go to state 392
    name         go to state 318
    scalar       go to state 393


state 536

   13 alternative: channel '?' CASE NEWLINE RIND . variant_vlist ROUTD

    '['         shift, and go to state 25
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PORT        shift, and go to state 28
    PROC        shift, and go to state 7
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196

    block_definition  go to state 199
    definition        go to state 203
    specification     go to state 501
    variant           go to state 502
    variant_vlist     go to state 549
    abbreviation      go to state 212
    declaration       go to state 215
    indef_type        go to state 34
    specifier         go to state 222
    tagged_list       go to state 504
    array_type        go to state 36
    comms_type        go to state 37
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 505
    scalar            go to state 393


state 537

   40 definition: ANY FUNCTION name '(' ')' NEWLINE RIND function_body . ROUTD ':' NEWLINE

    ROUTD  shift, and go to state 550


state 538

   50 option: ELSE NEWLINE RIND process . ROUTD

    ROUTD  shift, and go to state 551


state 539

   49 option: case_expression_clist NEWLINE RIND process . ROUTD

    ROUTD  shift, and go to state 552


state 540

   47 guarded_choice: boolean NEWLINE RIND process ROUTD .

    $default  reduce using rule 47 (guarded_choice)


state 541

  108 tagged_protocol_vlist: tagged_protocol .

    $default  reduce using rule 108 (tagged_protocol_vlist)


state 542

   38 definition: PROTOCOL name NEWLINE RIND CASE NEWLINE RIND tagged_protocol_vlist . ROUTD ROUTD ':' NEWLINE
  109 tagged_protocol_vlist: tagged_protocol_vlist . tagged_protocol

    IDENTIFIER  shift, and go to state 16
    ROUTD       shift, and go to state 553

    tagged_protocol  go to state 554
    name             go to state 318
    scalar           go to state 543


state 543

  106 tagged_protocol: scalar . NEWLINE
  107                | scalar . ';' sequential_protocol NEWLINE

    ';'      shift, and go to state 555
    NEWLINE  shift, and go to state 556


state 544

   39 definition: PROTOCOL name NEWLINE RIND CASE NEWLINE ROUTD ':' . NEWLINE

    NEWLINE  shift, and go to state 557


state 545

   89 variant: tagged_list NEWLINE RIND . process ROUTD

    '['         shift, and go to state 182
    ALT         shift, and go to state 183
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CASE        shift, and go to state 185
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    IF          shift, and go to state 186
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PAR         shift, and go to state 187
    PLACE       shift, and go to state 188
    PLACED      shift, and go to state 189
    PORT        shift, and go to state 28
    PRI         shift, and go to state 190
    PROC        shift, and go to state 7
    PROCESSOR   shift, and go to state 191
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    SEQ         shift, and go to state 193
    SKIP        shift, and go to state 194
    STOP        shift, and go to state 195
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196
    WHILE       shift, and go to state 197

    alternation       go to state 198
    block_definition  go to state 199
    case_input        go to state 200
    conditional       go to state 201
    construction      go to state 202
    definition        go to state 203
    loop              go to state 204
    parallel          go to state 205
    placedpar         go to state 206
    process           go to state 558
    selection         go to state 209
    sequence          go to state 210
    specification     go to state 211
    abbreviation      go to state 212
    action            go to state 213
    allocation        go to state 214
    declaration       go to state 215
    instance          go to state 216
    assignment        go to state 217
    channel           go to state 218
    delayed_input     go to state 219
    indef_type        go to state 34
    input             go to state 220
    output            go to state 221
    specifier         go to state 222
    variable          go to state 223
    variable_clist    go to state 224
    array_type        go to state 36
    comms_type        go to state 37
    element           go to state 225
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 229
    scalar            go to state 73


state 546

   41 definition: data_type_clist FUNCTION name '(' formal_olist ')' IS expression_list . ':' NEWLINE

    ':'  shift, and go to state 559


state 547

   86 valof: VALOF NEWLINE RIND process RESULT expression_list NEWLINE . ROUTD

    ROUTD  shift, and go to state 560


state 548

   15 alternative: boolean '&' channel '?' CASE NEWLINE . RIND variant_vlist ROUTD
   16            | boolean '&' channel '?' CASE NEWLINE .

    RIND  shift, and go to state 561

    $default  reduce using rule 16 (alternative)


state 549

   13 alternative: channel '?' CASE NEWLINE RIND variant_vlist . ROUTD
   92 variant_vlist: variant_vlist . variant

    '['         shift, and go to state 25
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PORT        shift, and go to state 28
    PROC        shift, and go to state 7
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    ROUTD       shift, and go to state 562
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196

    block_definition  go to state 199
    definition        go to state 203
    specification     go to state 501
    variant           go to state 531
    abbreviation      go to state 212
    declaration       go to state 215
    indef_type        go to state 34
    specifier         go to state 222
    tagged_list       go to state 504
    array_type        go to state 36
    comms_type        go to state 37
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 505
    scalar            go to state 393


state 550

   40 definition: ANY FUNCTION name '(' ')' NEWLINE RIND function_body ROUTD . ':' NEWLINE

    ':'  shift, and go to state 563


state 551

   50 option: ELSE NEWLINE RIND process ROUTD .

    $default  reduce using rule 50 (option)


state 552

   49 option: case_expression_clist NEWLINE RIND process ROUTD .

    $default  reduce using rule 49 (option)


state 553

   38 definition: PROTOCOL name NEWLINE RIND CASE NEWLINE RIND tagged_protocol_vlist ROUTD . ROUTD ':' NEWLINE

    ROUTD  shift, and go to state 564


state 554

  109 tagged_protocol_vlist: tagged_protocol_vlist tagged_protocol .

    $default  reduce using rule 109 (tagged_protocol_vlist)


state 555

  107 tagged_protocol: scalar ';' . sequential_protocol NEWLINE

    '['     shift, and go to state 133
    BOOL    shift, and go to state 1
    BYTE    shift, and go to state 2
    CHAN    shift, and go to state 26
    INT     shift, and go to state 3
    INT16   shift, and go to state 4
    INT32   shift, and go to state 5
    INT64   shift, and go to state 6
    PORT    shift, and go to state 28
    REAL32  shift, and go to state 8
    REAL64  shift, and go to state 9
    TIMER   shift, and go to state 29

    sequential_protocol    go to state 565
    simple_protocol_slist  go to state 376
    array_type             go to state 36
    comms_type             go to state 37
    primitive_type         go to state 38
    simple_protocol        go to state 377
    type                   go to state 137
    counting_type          go to state 138
    data_type              go to state 40


state 556

  106 tagged_protocol: scalar NEWLINE .

    $default  reduce using rule 106 (tagged_protocol)


state 557

   39 definition: PROTOCOL name NEWLINE RIND CASE NEWLINE ROUTD ':' NEWLINE .

    $default  reduce using rule 39 (definition)


state 558

   89 variant: tagged_list NEWLINE RIND process . ROUTD

    ROUTD  shift, and go to state 566


state 559

   41 definition: data_type_clist FUNCTION name '(' formal_olist ')' IS expression_list ':' . NEWLINE

    NEWLINE  shift, and go to state 567


state 560

   86 valof: VALOF NEWLINE RIND process RESULT expression_list NEWLINE ROUTD .

    $default  reduce using rule 86 (valof)


state 561

   15 alternative: boolean '&' channel '?' CASE NEWLINE RIND . variant_vlist ROUTD

    '['         shift, and go to state 25
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PORT        shift, and go to state 28
    PROC        shift, and go to state 7
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196

    block_definition  go to state 199
    definition        go to state 203
    specification     go to state 501
    variant           go to state 502
    variant_vlist     go to state 568
    abbreviation      go to state 212
    declaration       go to state 215
    indef_type        go to state 34
    specifier         go to state 222
    tagged_list       go to state 504
    array_type        go to state 36
    comms_type        go to state 37
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 505
    scalar            go to state 393


state 562

   13 alternative: channel '?' CASE NEWLINE RIND variant_vlist ROUTD .

    $default  reduce using rule 13 (alternative)


state 563

   40 definition: ANY FUNCTION name '(' ')' NEWLINE RIND function_body ROUTD ':' . NEWLINE

    NEWLINE  shift, and go to state 569


state 564

   38 definition: PROTOCOL name NEWLINE RIND CASE NEWLINE RIND tagged_protocol_vlist ROUTD ROUTD . ':' NEWLINE

    ':'  shift, and go to state 570


state 565

  107 tagged_protocol: scalar ';' sequential_protocol . NEWLINE

    NEWLINE  shift, and go to state 571


state 566

   89 variant: tagged_list NEWLINE RIND process ROUTD .

    $default  reduce using rule 89 (variant)


state 567

   41 definition: data_type_clist FUNCTION name '(' formal_olist ')' IS expression_list ':' NEWLINE .

    $default  reduce using rule 41 (definition)


state 568

   15 alternative: boolean '&' channel '?' CASE NEWLINE RIND variant_vlist . ROUTD
   92 variant_vlist: variant_vlist . variant

    '['         shift, and go to state 25
    ANY         shift, and go to state 184
    BOOL        shift, and go to state 1
    BYTE        shift, and go to state 2
    CHAN        shift, and go to state 26
    IDENTIFIER  shift, and go to state 16
    INDEF_SPEC  shift, and go to state 27
    INT         shift, and go to state 3
    INT16       shift, and go to state 4
    INT32       shift, and go to state 5
    INT64       shift, and go to state 6
    PORT        shift, and go to state 28
    PROC        shift, and go to state 7
    PROTOCOL    shift, and go to state 192
    REAL32      shift, and go to state 8
    REAL64      shift, and go to state 9
    ROUTD       shift, and go to state 572
    TIMER       shift, and go to state 29
    VAL         shift, and go to state 196

    block_definition  go to state 199
    definition        go to state 203
    specification     go to state 501
    variant           go to state 531
    abbreviation      go to state 212
    declaration       go to state 215
    indef_type        go to state 34
    specifier         go to state 222
    tagged_list       go to state 504
    array_type        go to state 36
    comms_type        go to state 37
    primitive_type    go to state 38
    type              go to state 226
    counting_type     go to state 13
    data_type         go to state 227
    data_type_clist   go to state 228
    name              go to state 505
    scalar            go to state 393


state 569

   40 definition: ANY FUNCTION name '(' ')' NEWLINE RIND function_body ROUTD ':' NEWLINE .

    $default  reduce using rule 40 (definition)


state 570

   38 definition: PROTOCOL name NEWLINE RIND CASE NEWLINE RIND tagged_protocol_vlist ROUTD ROUTD ':' . NEWLINE

    NEWLINE  shift, and go to state 573


state 571

  107 tagged_protocol: scalar ';' sequential_protocol NEWLINE .

    $default  reduce using rule 107 (tagged_protocol)


state 572

   15 alternative: boolean '&' channel '?' CASE NEWLINE RIND variant_vlist ROUTD .

    $default  reduce using rule 15 (alternative)


state 573

   38 definition: PROTOCOL name NEWLINE RIND CASE NEWLINE RIND tagged_protocol_vlist ROUTD ROUTD ':' NEWLINE .

    $default  reduce using rule 38 (definition)
